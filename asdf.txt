digraph G {
    1209 -> 1210 ;
    1208 -> 1209 ;
    1207 -> 947 ;
    1206 -> 947 ;
    1205 -> 948 ;
    1204 -> 948 ;
    1203 -> 1204 ;
    1202 -> 1203 ;
    1201 -> 1202 ;
    1200 -> 1201 ;
    1199 -> 1200 ;
    1198 -> 1199 ;
    1197 -> 1198 ;
    1196 -> 1197 ;
    1195 -> 1196 ;
    1194 -> 1191 [label="Failed", style=dotted];
    1193 -> 1194 ;
    1192 -> 1191 ;
    1191 -> 1195 ;
    1190 -> 1193 [label="True"];
    1190 -> 1192 [label="False"];
    1189 -> 1190 ;
    1188 -> 1189 ;
    1187 -> 1188 ;
    1186 -> 1187 ;
    1185 -> 1182 [label="Failed", style=dotted];
    1184 -> 1185 ;
    1183 -> 1182 ;
    1182 -> 1186 ;
    1181 -> 1184 [label="True"];
    1181 -> 1183 [label="False"];
    1180 -> 1181 ;
    1179 -> 1180 ;
    1178 -> 1179 ;
    1177 -> 1178 ;
    1176 -> 1177 ;
    1175 -> 1176 ;
    1174 -> 1175 ;
    1173 -> 1174 ;
    1172 -> 1173 ;
    1171 -> 1172 ;
    1170 -> 1171 ;
    1169 -> 1170 ;
    1168 -> 1169 ;
    1167 -> 1168 ;
    1166 -> 1167 ;
    1165 -> 1166 ;
    1164 -> 1165 ;
    1163 -> 1164 ;
    1162 -> 1163 ;
    1161 -> 1158 [label="Failed", style=dotted];
    1160 -> 1161 ;
    1159 -> 1158 ;
    1158 -> 1162 ;
    1157 -> 1160 [label="True"];
    1157 -> 1159 [label="False"];
    1156 -> 1157 ;
    1155 -> 1156 ;
    1154 -> 1155 ;
    1153 -> 1154 ;
    1152 -> 1153 ;
    1151 -> 1152 ;
    1150 -> 1151 ;
    1149 -> 1150 ;
    1148 -> 1149 ;
    1147 -> 1148 ;
    1146 -> 1147 ;
    1145 -> 1146 ;
    1144 -> 1145 ;
    1143 -> 1144 ;
    1142 -> 1143 ;
    1141 -> 1142 ;
    1140 -> 1141 ;
    1139 -> 1140 ;
    1138 -> 1139 ;
    1137 -> 1138 ;
    1136 -> 1133 [label="Failed", style=dotted];
    1135 -> 1136 ;
    1134 -> 1133 ;
    1133 -> 1137 ;
    1132 -> 1135 [label="True"];
    1132 -> 1134 [label="False"];
    1131 -> 1132 ;
    1130 -> 1131 ;
    1129 -> 1130 ;
    1128 -> 1129 ;
    1127 -> 1128 ;
    1126 -> 1127 ;
    1125 -> 1126 ;
    1124 -> 1125 ;
    1123 -> 1124 ;
    1122 -> 1123 ;
    1121 -> 1122 ;
    1120 -> 1118 [label="Failed", style=dotted];
    1119 -> 1120 ;
    1118 -> 1121 ;
    1117 -> 1119 [label="False"];
    1117 -> 1118 [label="True"];
    1116 -> 1117 ;
    1115 -> 1116 ;
    1114 -> 1111 [label="Failed", style=dotted];
    1113 -> 1114 ;
    1112 -> 1111 ;
    1111 -> 1115 ;
    1110 -> 1113 [label="True"];
    1110 -> 1112 [label="False"];
    1109 -> 1110 ;
    1108 -> 1109 ;
    1107 -> 1104 [label="Failed", style=dotted];
    1106 -> 1107 ;
    1105 -> 1104 ;
    1104 -> 1108 ;
    1103 -> 1106 [label="True"];
    1103 -> 1105 [label="False"];
    1102 -> 1103 ;
    1101 -> 1102 ;
    1100 -> 1101 ;
    1099 -> 1100 ;
    1098 -> 1099 ;
    1097 -> 1098 ;
    1096 -> 1097 ;
    1095 -> 1096 ;
    1094 -> 1095 ;
    1093 -> 1091 [label="Failed", style=dotted];
    1092 -> 1093 ;
    1091 -> 1094 ;
    1090 -> 1092 [label="False"];
    1090 -> 1091 [label="True"];
    1089 -> 1090 ;
    1088 -> 1089 ;
    1087 -> 1088 ;
    1086 -> 1083 [label="Failed", style=dotted];
    1085 -> 1086 ;
    1084 -> 1083 ;
    1083 -> 1087 ;
    1082 -> 1085 [label="True"];
    1082 -> 1084 [label="False"];
    1081 -> 1082 ;
    1080 -> 1081 ;
    1079 -> 1080 ;
    1078 -> 1079 ;
    1077 -> 1078 ;
    1076 -> 1077 ;
    1075 -> 1076 ;
    1074 -> 1075 ;
    1073 -> 1074 ;
    1072 -> 1073 ;
    1071 -> 1068 [label="Failed", style=dotted];
    1070 -> 1071 ;
    1069 -> 1068 ;
    1068 -> 1072 ;
    1067 -> 1070 [label="True"];
    1067 -> 1069 [label="False"];
    1066 -> 1067 ;
    1065 -> 1066 ;
    1064 -> 1065 ;
    1063 -> 1064 ;
    1062 -> 1063 ;
    1061 -> 1062 ;
    1060 -> 1061 ;
    1059 -> 1057 [label="Failed", style=dotted];
    1058 -> 1059 ;
    1057 -> 1060 ;
    1056 -> 1058 [label="False"];
    1056 -> 1057 [label="True"];
    1055 -> 1056 ;
    1054 -> 1055 ;
    1053 -> 1050 [label="Failed", style=dotted];
    1052 -> 1053 ;
    1051 -> 1050 ;
    1050 -> 1054 ;
    1049 -> 1052 [label="True"];
    1049 -> 1051 [label="False"];
    1048 -> 1049 ;
    1047 -> 1048 ;
    1046 -> 1047 ;
    1045 -> 1046 ;
    1044 -> 1045 ;
    1043 -> 1044 ;
    1042 -> 1043 ;
    1041 -> 1042 ;
    1040 -> 1041 ;
    1039 -> 1205 ;
    1038 -> 1039 ;
    1037 -> 1038 ;
    1036 -> 1037 ;
    1035 -> 1036 ;
    1034 -> 1035 ;
    1033 -> 1030 [label="Failed", style=dotted];
    1032 -> 1033 ;
    1031 -> 1030 ;
    1030 -> 1034 ;
    1029 -> 1032 [label="True"];
    1029 -> 1031 [label="False"];
    1028 -> 1029 ;
    1027 -> 1028 ;
    1026 -> 1027 ;
    1025 -> 1026 ;
    1024 -> 1025 ;
    1023 -> 1024 ;
    1022 -> 1023 ;
    1021 -> 1022 ;
    1020 -> 1021 ;
    1019 -> 1020 ;
    1018 -> 1019 ;
    1017 -> 1018 ;
    1016 -> 1017 ;
    1015 -> 1016 ;
    1014 -> 1015 ;
    1013 -> 1014 ;
    1012 -> 1013 ;
    1011 -> 1012 ;
    1010 -> 1007 [label="Failed", style=dotted];
    1009 -> 1010 ;
    1008 -> 1007 ;
    1007 -> 1011 ;
    1006 -> 1009 [label="True"];
    1006 -> 1008 [label="False"];
    1005 -> 1006 ;
    1004 -> 1005 ;
    1003 -> 1004 ;
    1002 -> 1003 ;
    1001 -> 1002 ;
    1000 -> 1001 ;
    999 -> 1000 ;
    998 -> 999 ;
    997 -> 998 ;
    996 -> 997 ;
    995 -> 993 [label="Failed", style=dotted];
    994 -> 995 ;
    993 -> 996 ;
    992 -> 994 [label="False"];
    992 -> 993 [label="True"];
    991 -> 992 ;
    990 -> 991 ;
    989 -> 986 [label="Failed", style=dotted];
    988 -> 989 ;
    987 -> 986 ;
    986 -> 990 ;
    985 -> 988 [label="True"];
    985 -> 987 [label="False"];
    984 -> 985 ;
    983 -> 984 ;
    982 -> 983 ;
    981 -> 982 ;
    980 -> 981 ;
    979 -> 980 ;
    978 -> 979 ;
    977 -> 978 ;
    976 -> 1040 ;
    975 -> 977 [label="True"];
    975 -> 976 [label="False"];
    974 -> 1207 ;
    973 -> 974 ;
    972 -> 973 ;
    971 -> 972 ;
    970 -> 971 ;
    969 -> 970 ;
    968 -> 969 ;
    967 -> 968 ;
    966 -> 967 ;
    965 -> 962 [label="Failed", style=dotted];
    964 -> 965 ;
    963 -> 962 ;
    962 -> 966 ;
    961 -> 964 [label="True"];
    961 -> 963 [label="False"];
    960 -> 961 ;
    959 -> 960 ;
    958 -> 959 ;
    957 -> 958 ;
    956 -> 957 ;
    955 -> 956 ;
    954 -> 955 ;
    953 -> 954 ;
    952 -> 953 ;
    951 -> 952 ;
    950 -> 951 ;
    949 -> 975 ;
    948 -> 1206 ;
    947 -> 1208 ;
    946 -> 950 [label="True"];
    946 -> 949 [label="False"];
    945 -> 946 ;
    944 -> 945 ;
    943 -> 944 ;
    942 -> 943 ;
    1210 [shape=doubleoctagon, label="1210 : MAIN-EXIT : v209"];
    1209 [shape=box, label="1209 : v209 := PAIR v208 v207"];
    1208 [shape=box, label="1208 : v208 := NIL operation"];
    1207 [shape=box, label="1207 : v207 := v24"];
    1206 [shape=box, label="1206 : v207 := v206"];
    1205 [shape=box, label="1205 : v206 := v76"];
    1204 [shape=box, label="1204 : v206 := v205"];
    1203 [shape=box, label="1203 : v205 := PAIR v204 v179"];
    1202 [shape=box, label="1202 : v204 := PAIR v203 v182"];
    1201 [shape=box, label="1201 : v203 := UPDATE v186 v202 v183"];
    1200 [shape=box, label="1200 : v202 := SOME v201"];
    1199 [shape=box, label="1199 : v201 := UPDATE v192 v200 v190"];
    1198 [shape=box, label="1198 : v200 := SOME v199"];
    1197 [shape=box, label="1197 : v199 := ADD v198 v196"];
    1196 [shape=box, label="1196 : v198 := CDR v197"];
    1195 [shape=box, label="1195 : v197 := CDR v77"];
    1194 [shape=cds, label="1194 : FAILWITH v195"];
    1193 [shape=box, label="1193 : v195 := PUSH 30 int"];
    1192 [shape=box, label="1192 : v196 := unlift_option v194"];
    1191 [label="1191 : skip"];
    1190 [shape=diamond, label="1190 : IF_NONE v194"];
    1189 [shape=box, label="1189 : v194 := GET v192 v190"];
    1188 [shape=box, label="1188 : v193 := DUP v192"];
    1187 [shape=box, label="1187 : v192 := SENDER"];
    1186 [shape=box, label="1186 : v191 := DUP v190"];
    1185 [shape=cds, label="1185 : FAILWITH v189"];
    1184 [shape=box, label="1184 : v189 := PUSH 30 int"];
    1183 [shape=box, label="1183 : v190 := unlift_option v188"];
    1182 [label="1182 : skip"];
    1181 [shape=diamond, label="1181 : IF_NONE v188"];
    1180 [shape=box, label="1180 : v188 := GET v186 v183"];
    1179 [shape=box, label="1179 : v187 := DUP v186"];
    1178 [shape=box, label="1178 : v186 := CAR v77"];
    1177 [shape=box, label="1177 : v185 := DUP v77"];
    1176 [shape=box, label="1176 : v184 := DUP v183"];
    1175 [shape=box, label="1175 : v183 := CAR v180"];
    1174 [shape=box, label="1174 : v182 := CDR v180"];
    1173 [shape=box, label="1173 : v181 := DUP v180"];
    1172 [shape=box, label="1172 : v180 := CAR v177"];
    1171 [shape=box, label="1171 : v179 := CDR v177"];
    1170 [shape=box, label="1170 : v178 := DUP v177"];
    1169 [shape=box, label="1169 : v177 := PAIR v176 v157"];
    1168 [shape=box, label="1168 : v176 := PAIR v160 v175"];
    1167 [shape=box, label="1167 : v175 := UPDATE v165 v174 v161"];
    1166 [shape=box, label="1166 : v174 := SOME v173"];
    1165 [shape=box, label="1165 : v173 := ADD v172 v169"];
    1164 [shape=box, label="1164 : v172 := CDR v171"];
    1163 [shape=box, label="1163 : v171 := CDR v77"];
    1162 [shape=box, label="1162 : v170 := DUP v77"];
    1161 [shape=cds, label="1161 : FAILWITH v168"];
    1160 [shape=box, label="1160 : v168 := PUSH 29 int"];
    1159 [shape=box, label="1159 : v169 := unlift_option v167"];
    1158 [label="1158 : skip"];
    1157 [shape=diamond, label="1157 : IF_NONE v167"];
    1156 [shape=box, label="1156 : v167 := GET v165 v161"];
    1155 [shape=box, label="1155 : v166 := DUP v165"];
    1154 [shape=box, label="1154 : v165 := CAR v164"];
    1153 [shape=box, label="1153 : v164 := CDR v77"];
    1152 [shape=box, label="1152 : v163 := DUP v77"];
    1151 [shape=box, label="1151 : v162 := DUP v161"];
    1150 [shape=box, label="1150 : v161 := CDR v158"];
    1149 [shape=box, label="1149 : v160 := CAR v158"];
    1148 [shape=box, label="1148 : v159 := DUP v158"];
    1147 [shape=box, label="1147 : v158 := CAR v155"];
    1146 [shape=box, label="1146 : v157 := CDR v155"];
    1145 [shape=box, label="1145 : v156 := DUP v155"];
    1144 [shape=box, label="1144 : v155 := PAIR v154 v136"];
    1143 [shape=box, label="1143 : v154 := PAIR v139 v153"];
    1142 [shape=box, label="1142 : v153 := UPDATE v143 v152 v140"];
    1141 [shape=box, label="1141 : v152 := SOME v151"];
    1140 [shape=box, label="1140 : v151 := SUB v147 v150"];
    1139 [shape=box, label="1139 : v150 := CDR v149"];
    1138 [shape=box, label="1138 : v149 := CDR v77"];
    1137 [shape=box, label="1137 : v148 := DUP v77"];
    1136 [shape=cds, label="1136 : FAILWITH v146"];
    1135 [shape=box, label="1135 : v146 := PUSH 28 int"];
    1134 [shape=box, label="1134 : v147 := unlift_option v145"];
    1133 [label="1133 : skip"];
    1132 [shape=diamond, label="1132 : IF_NONE v145"];
    1131 [shape=box, label="1131 : v145 := GET v143 v140"];
    1130 [shape=box, label="1130 : v144 := DUP v143"];
    1129 [shape=box, label="1129 : v143 := CAR v77"];
    1128 [shape=box, label="1128 : v142 := DUP v77"];
    1127 [shape=box, label="1127 : v141 := DUP v140"];
    1126 [shape=box, label="1126 : v140 := CDR v137"];
    1125 [shape=box, label="1125 : v139 := CAR v137"];
    1124 [shape=box, label="1124 : v138 := DUP v137"];
    1123 [shape=box, label="1123 : v137 := CAR v1"];
    1122 [shape=box, label="1122 : v136 := CDR v1"];
    1121 [shape=box, label="1121 : v135 := DUP v1"];
    1120 [shape=cds, label="1120 : FAILWITH v134"];
    1119 [shape=box, label="1119 : v134 := PUSH \"WrongCondition: self.data.allowance[params.fromAddr][sp.sender] >= params.value\" string"];
    1118 [label="1118 : skip"];
    1117 [shape=diamond, label="1117 : IF v133"];
    1116 [shape=box, label="1116 : v133 := GEQ v132"];
    1115 [shape=box, label="1115 : v132 := COMPARE v131 v119"];
    1114 [shape=cds, label="1114 : FAILWITH v130"];
    1113 [shape=box, label="1113 : v130 := PUSH 27 int"];
    1112 [shape=box, label="1112 : v131 := unlift_option v129"];
    1111 [label="1111 : skip"];
    1110 [shape=diamond, label="1110 : IF_NONE v129"];
    1109 [shape=box, label="1109 : v129 := GET v128 v127"];
    1108 [shape=box, label="1108 : v128 := SENDER"];
    1107 [shape=cds, label="1107 : FAILWITH v126"];
    1106 [shape=box, label="1106 : v126 := PUSH 27 int"];
    1105 [shape=box, label="1105 : v127 := unlift_option v125"];
    1104 [label="1104 : skip"];
    1103 [shape=diamond, label="1103 : IF_NONE v125"];
    1102 [shape=box, label="1102 : v125 := GET v124 v122"];
    1101 [shape=box, label="1101 : v124 := CAR v77"];
    1100 [shape=box, label="1100 : v123 := DUP v77"];
    1099 [shape=box, label="1099 : v122 := CAR v121"];
    1098 [shape=box, label="1098 : v121 := CAR v1"];
    1097 [shape=box, label="1097 : v120 := DUP v1"];
    1096 [shape=box, label="1096 : v119 := CDR v118"];
    1095 [shape=box, label="1095 : v118 := CDR v77"];
    1094 [shape=box, label="1094 : v117 := DUP v77"];
    1093 [shape=cds, label="1093 : FAILWITH v116"];
    1092 [shape=box, label="1092 : v116 := PUSH \"WrongCondition: (self.data.balance[params.toAddr] + params.value) > self.data.balance[params.toAddr]\" string"];
    1091 [label="1091 : skip"];
    1090 [shape=diamond, label="1090 : IF v115"];
    1089 [shape=box, label="1089 : v115 := GT v114"];
    1088 [shape=box, label="1088 : v114 := COMPARE v113 v100"];
    1087 [shape=box, label="1087 : v113 := ADD v112 v103"];
    1086 [shape=cds, label="1086 : FAILWITH v111"];
    1085 [shape=box, label="1085 : v111 := PUSH 26 int"];
    1084 [shape=box, label="1084 : v112 := unlift_option v110"];
    1083 [label="1083 : skip"];
    1082 [shape=diamond, label="1082 : IF_NONE v110"];
    1081 [shape=box, label="1081 : v110 := GET v109 v106"];
    1080 [shape=box, label="1080 : v109 := CAR v108"];
    1079 [shape=box, label="1079 : v108 := CDR v77"];
    1078 [shape=box, label="1078 : v107 := DUP v77"];
    1077 [shape=box, label="1077 : v106 := CDR v105"];
    1076 [shape=box, label="1076 : v105 := CAR v1"];
    1075 [shape=box, label="1075 : v104 := DUP v1"];
    1074 [shape=box, label="1074 : v103 := CDR v102"];
    1073 [shape=box, label="1073 : v102 := CDR v77"];
    1072 [shape=box, label="1072 : v101 := DUP v77"];
    1071 [shape=cds, label="1071 : FAILWITH v99"];
    1070 [shape=box, label="1070 : v99 := PUSH 26 int"];
    1069 [shape=box, label="1069 : v100 := unlift_option v98"];
    1068 [label="1068 : skip"];
    1067 [shape=diamond, label="1067 : IF_NONE v98"];
    1066 [shape=box, label="1066 : v98 := GET v97 v94"];
    1065 [shape=box, label="1065 : v97 := CAR v96"];
    1064 [shape=box, label="1064 : v96 := CDR v77"];
    1063 [shape=box, label="1063 : v95 := DUP v77"];
    1062 [shape=box, label="1062 : v94 := CDR v93"];
    1061 [shape=box, label="1061 : v93 := CAR v1"];
    1060 [shape=box, label="1060 : v92 := DUP v1"];
    1059 [shape=cds, label="1059 : FAILWITH v91"];
    1058 [shape=box, label="1058 : v91 := PUSH \"WrongCondition: self.data.balance[params.fromAddr] >= params.value\" string"];
    1057 [label="1057 : skip"];
    1056 [shape=diamond, label="1056 : IF v90"];
    1055 [shape=box, label="1055 : v90 := GEQ v89"];
    1054 [shape=box, label="1054 : v89 := COMPARE v88 v80"];
    1053 [shape=cds, label="1053 : FAILWITH v87"];
    1052 [shape=box, label="1052 : v87 := PUSH 25 int"];
    1051 [shape=box, label="1051 : v88 := unlift_option v86"];
    1050 [label="1050 : skip"];
    1049 [shape=diamond, label="1049 : IF_NONE v86"];
    1048 [shape=box, label="1048 : v86 := GET v85 v83"];
    1047 [shape=box, label="1047 : v85 := CAR v77"];
    1046 [shape=box, label="1046 : v84 := DUP v77"];
    1045 [shape=box, label="1045 : v83 := CDR v82"];
    1044 [shape=box, label="1044 : v82 := CAR v1"];
    1043 [shape=box, label="1043 : v81 := DUP v1"];
    1042 [shape=box, label="1042 : v80 := CDR v79"];
    1041 [shape=box, label="1041 : v79 := CDR v77"];
    1040 [shape=box, label="1040 : v78 := DUP v77"];
    1039 [shape=box, label="1039 : v76 := PAIR v75 v59"];
    1038 [shape=box, label="1038 : v75 := PAIR v62 v74"];
    1037 [shape=box, label="1037 : v74 := UPDATE v66 v73 v63"];
    1036 [shape=box, label="1036 : v73 := SOME v72"];
    1035 [shape=box, label="1035 : v72 := ADD v71 v70"];
    1034 [shape=box, label="1034 : v71 := CDR v26"];
    1033 [shape=cds, label="1033 : FAILWITH v69"];
    1032 [shape=box, label="1032 : v69 := PUSH 17 int"];
    1031 [shape=box, label="1031 : v70 := unlift_option v68"];
    1030 [label="1030 : skip"];
    1029 [shape=diamond, label="1029 : IF_NONE v68"];
    1028 [shape=box, label="1028 : v68 := GET v66 v63"];
    1027 [shape=box, label="1027 : v67 := DUP v66"];
    1026 [shape=box, label="1026 : v66 := CAR v26"];
    1025 [shape=box, label="1025 : v65 := DUP v26"];
    1024 [shape=box, label="1024 : v64 := DUP v63"];
    1023 [shape=box, label="1023 : v63 := CDR v60"];
    1022 [shape=box, label="1022 : v62 := CAR v60"];
    1021 [shape=box, label="1021 : v61 := DUP v60"];
    1020 [shape=box, label="1020 : v60 := CAR v57"];
    1019 [shape=box, label="1019 : v59 := CDR v57"];
    1018 [shape=box, label="1018 : v58 := DUP v57"];
    1017 [shape=box, label="1017 : v57 := PAIR v56 v40"];
    1016 [shape=box, label="1016 : v56 := PAIR v43 v55"];
    1015 [shape=box, label="1015 : v55 := UPDATE v46 v54 v44"];
    1014 [shape=box, label="1014 : v54 := SOME v53"];
    1013 [shape=box, label="1013 : v53 := SUB v50 v52"];
    1012 [shape=box, label="1012 : v52 := CDR v26"];
    1011 [shape=box, label="1011 : v51 := DUP v26"];
    1010 [shape=cds, label="1010 : FAILWITH v49"];
    1009 [shape=box, label="1009 : v49 := PUSH 16 int"];
    1008 [shape=box, label="1008 : v50 := unlift_option v48"];
    1007 [label="1007 : skip"];
    1006 [shape=diamond, label="1006 : IF_NONE v48"];
    1005 [shape=box, label="1005 : v48 := GET v46 v44"];
    1004 [shape=box, label="1004 : v47 := DUP v46"];
    1003 [shape=box, label="1003 : v46 := SENDER"];
    1002 [shape=box, label="1002 : v45 := DUP v44"];
    1001 [shape=box, label="1001 : v44 := CDR v41"];
    1000 [shape=box, label="1000 : v43 := CAR v41"];
    999 [shape=box, label="999 : v42 := DUP v41"];
    998 [shape=box, label="998 : v41 := CAR v1"];
    997 [shape=box, label="997 : v40 := CDR v1"];
    996 [shape=box, label="996 : v39 := DUP v1"];
    995 [shape=cds, label="995 : FAILWITH v38"];
    994 [shape=box, label="994 : v38 := PUSH \"WrongCondition: self.data.balance[sp.sender] >= params.value\" string"];
    993 [label="993 : skip"];
    992 [shape=diamond, label="992 : IF v37"];
    991 [shape=box, label="991 : v37 := GEQ v36"];
    990 [shape=box, label="990 : v36 := COMPARE v35 v28"];
    989 [shape=cds, label="989 : FAILWITH v34"];
    988 [shape=box, label="988 : v34 := PUSH 15 int"];
    987 [shape=box, label="987 : v35 := unlift_option v33"];
    986 [label="986 : skip"];
    985 [shape=diamond, label="985 : IF_NONE v33"];
    984 [shape=box, label="984 : v33 := GET v32 v31"];
    983 [shape=box, label="983 : v32 := SENDER"];
    982 [shape=box, label="982 : v31 := CDR v30"];
    981 [shape=box, label="981 : v30 := CAR v1"];
    980 [shape=box, label="980 : v29 := DUP v1"];
    979 [shape=box, label="979 : v28 := CDR v26"];
    978 [shape=box, label="978 : v27 := DUP v26"];
    977 [shape=box, label="977 : v26 := unlift_left v25"];
    976 [shape=box, label="976 : v77 := unlift_right v25"];
    975 [shape=diamond, label="975 : IF_LEFT v25"];
    974 [shape=box, label="974 : v24 := PAIR v23 v5"];
    973 [shape=box, label="973 : v23 := PAIR v22 v8"];
    972 [shape=box, label="972 : v22 := UPDATE v11 v21 v9"];
    971 [shape=box, label="971 : v21 := SOME v20"];
    970 [shape=box, label="970 : v20 := UPDATE v17 v19 v15"];
    969 [shape=box, label="969 : v19 := SOME v18"];
    968 [shape=box, label="968 : v18 := CDR v3"];
    967 [shape=box, label="967 : v17 := CAR v3"];
    966 [shape=box, label="966 : v16 := DUP v3"];
    965 [shape=cds, label="965 : FAILWITH v14"];
    964 [shape=box, label="964 : v14 := PUSH 21 int"];
    963 [shape=box, label="963 : v15 := unlift_option v13"];
    962 [label="962 : skip"];
    961 [shape=diamond, label="961 : IF_NONE v13"];
    960 [shape=box, label="960 : v13 := GET v11 v9"];
    959 [shape=box, label="959 : v12 := DUP v11"];
    958 [shape=box, label="958 : v11 := SENDER"];
    957 [shape=box, label="957 : v10 := DUP v9"];
    956 [shape=box, label="956 : v9 := CAR v6"];
    955 [shape=box, label="955 : v8 := CDR v6"];
    954 [shape=box, label="954 : v7 := DUP v6"];
    953 [shape=box, label="953 : v6 := CAR v1"];
    952 [shape=box, label="952 : v5 := CDR v1"];
    951 [shape=box, label="951 : v4 := DUP v1"];
    950 [shape=box, label="950 : v3 := unlift_left v2"];
    949 [shape=box, label="949 : v25 := unlift_right v2"];
    948 [label="948 : skip"];
    947 [label="947 : skip"];
    946 [shape=diamond, label="946 : IF_LEFT v2"];
    945 [shape=box, label="945 : v2 := CAR param_storage"];
    944 [shape=box, label="944 : v1 := CDR param_storage"];
    943 [shape=box, label="943 : v0 := DUP param_storage"];
    942 [shape=doubleoctagon, label="942 : MAIN-ENTRY"];
}
942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume !(v25= Left x);
976: v77 := unlift_right v25;
1040: v78 := DUP v77;
1041: v79 := CDR v77;
1042: v80 := CDR v79;
1043: v81 := DUP v1;
1044: v82 := CAR v1;
1045: v83 := CDR v82;
1046: v84 := DUP v77;
1047: v85 := CAR v77;
1048: v86 := GET v85 v83;
1049: Assume !(v86= None);
1051: v88 := unlift_option v86;
1050: Skip;
1054: v89 := COMPARE v88 v80;
1055: v90 := GEQ v89;
1056: Assume v90= True;
1057: Skip;
1060: v92 := DUP v1;
1061: v93 := CAR v1;
1062: v94 := CDR v93;
1063: v95 := DUP v77;
1064: v96 := CDR v77;
1065: v97 := CAR v96;
1066: v98 := GET v97 v94;
1067: Assume !(v98= None);
1069: v100 := unlift_option v98;
1068: Skip;
1072: v101 := DUP v77;
1073: v102 := CDR v77;
1074: v103 := CDR v102;
1075: v104 := DUP v1;
1076: v105 := CAR v1;
1077: v106 := CDR v105;
1078: v107 := DUP v77;
1079: v108 := CDR v77;
1080: v109 := CAR v108;
1081: v110 := GET v109 v106;
1082: Assume !(v110= None);
1084: v112 := unlift_option v110;
1083: Skip;
1087: Assert (ADD v112 v103)_no_overflow;
1087: v113 := ADD v112 v103;
1088: v114 := COMPARE v113 v100;
1089: v115 := GT v114;
1090: Assume v115= True;
1091: Skip;
1094: v117 := DUP v77;
1095: v118 := CDR v77;
1096: v119 := CDR v118;
1097: v120 := DUP v1;
1098: v121 := CAR v1;
1099: v122 := CAR v121;
1100: v123 := DUP v77;
1101: v124 := CAR v77;
1102: v125 := GET v124 v122;
1103: Assume !(v125= None);
1105: v127 := unlift_option v125;
1104: Skip;
1108: v128 := SENDER;
1109: v129 := GET v128 v127;
1110: Assume !(v129= None);
1112: v131 := unlift_option v129;
1111: Skip;
1115: v132 := COMPARE v131 v119;
1116: v133 := GEQ v132;
1117: Assume v133= True;
1118: Skip;
1121: v135 := DUP v1;
1122: v136 := CDR v1;
1123: v137 := CAR v1;
1124: v138 := DUP v137;
1125: v139 := CAR v137;
1126: v140 := CDR v137;
1127: v141 := DUP v140;
1128: v142 := DUP v77;
1129: v143 := CAR v77;
1130: v144 := DUP v143;
1131: v145 := GET v143 v140;
1132: Assume !(v145= None);
1134: v147 := unlift_option v145;
1133: Skip;
1137: v148 := DUP v77;
1138: v149 := CDR v77;
1139: v150 := CDR v149;
1140: Assert (SUB v147 v150)_no_underflow;
1140: v151 := SUB v147 v150;
1141: v152 := SOME v151;
1142: v153 := UPDATE v143 v152 v140;
1143: v154 := PAIR v139 v153;
1144: v155 := PAIR v154 v136;
1145: v156 := DUP v155;
1146: v157 := CDR v155;
1147: v158 := CAR v155;
1148: v159 := DUP v158;
1149: v160 := CAR v158;
1150: v161 := CDR v158;
1151: v162 := DUP v161;
1152: v163 := DUP v77;
1153: v164 := CDR v77;
1154: v165 := CAR v164;
1155: v166 := DUP v165;
1156: v167 := GET v165 v161;
1157: Assume !(v167= None);
1159: v169 := unlift_option v167;
1158: Skip;
1162: v170 := DUP v77;
1163: v171 := CDR v77;
1164: v172 := CDR v171;
1165: Assert (ADD v172 v169)_no_overflow;
1165: v173 := ADD v172 v169;
1166: v174 := SOME v173;
1167: v175 := UPDATE v165 v174 v161;
1168: v176 := PAIR v160 v175;
1169: v177 := PAIR v176 v157;
1170: v178 := DUP v177;
1171: v179 := CDR v177;
1172: v180 := CAR v177;
1173: v181 := DUP v180;
1174: v182 := CDR v180;
1175: v183 := CAR v180;
1176: v184 := DUP v183;
1177: v185 := DUP v77;
1178: v186 := CAR v77;
1179: v187 := DUP v186;
1180: v188 := GET v186 v183;
1181: Assume !(v188= None);
1183: v190 := unlift_option v188;
1182: Skip;
1186: v191 := DUP v190;
1187: v192 := SENDER;
1188: v193 := DUP v192;
1189: v194 := GET v192 v190;
1190: Assume !(v194= None);
1192: v196 := unlift_option v194;
1191: Skip;
1195: v197 := CDR v77;
1196: v198 := CDR v197;
1197: Assert (ADD v198 v196)_no_overflow;
1197: v199 := ADD v198 v196;
1198: v200 := SOME v199;
1199: v201 := UPDATE v192 v200 v190;
1200: v202 := SOME v201;
1201: v203 := UPDATE v186 v202 v183;
1202: v204 := PAIR v203 v182;
1203: v205 := PAIR v204 v179;
1204: v206 := v205;
948: Skip;
1206: v207 := v206;
947: Skip;
1208: v208 := NIL operation;
1209: v209 := PAIR v208 v207;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume !(v25= Left x);
976: v77 := unlift_right v25;
1040: v78 := DUP v77;
1041: v79 := CDR v77;
1042: v80 := CDR v79;
1043: v81 := DUP v1;
1044: v82 := CAR v1;
1045: v83 := CDR v82;
1046: v84 := DUP v77;
1047: v85 := CAR v77;
1048: v86 := GET v85 v83;
1049: Assume !(v86= None);
1051: v88 := unlift_option v86;
1050: Skip;
1054: v89 := COMPARE v88 v80;
1055: v90 := GEQ v89;
1056: Assume v90= True;
1057: Skip;
1060: v92 := DUP v1;
1061: v93 := CAR v1;
1062: v94 := CDR v93;
1063: v95 := DUP v77;
1064: v96 := CDR v77;
1065: v97 := CAR v96;
1066: v98 := GET v97 v94;
1067: Assume !(v98= None);
1069: v100 := unlift_option v98;
1068: Skip;
1072: v101 := DUP v77;
1073: v102 := CDR v77;
1074: v103 := CDR v102;
1075: v104 := DUP v1;
1076: v105 := CAR v1;
1077: v106 := CDR v105;
1078: v107 := DUP v77;
1079: v108 := CDR v77;
1080: v109 := CAR v108;
1081: v110 := GET v109 v106;
1082: Assume !(v110= None);
1084: v112 := unlift_option v110;
1083: Skip;
1087: Assert (ADD v112 v103)_no_overflow;
1087: v113 := ADD v112 v103;
1088: v114 := COMPARE v113 v100;
1089: v115 := GT v114;
1090: Assume v115= True;
1091: Skip;
1094: v117 := DUP v77;
1095: v118 := CDR v77;
1096: v119 := CDR v118;
1097: v120 := DUP v1;
1098: v121 := CAR v1;
1099: v122 := CAR v121;
1100: v123 := DUP v77;
1101: v124 := CAR v77;
1102: v125 := GET v124 v122;
1103: Assume !(v125= None);
1105: v127 := unlift_option v125;
1104: Skip;
1108: v128 := SENDER;
1109: v129 := GET v128 v127;
1110: Assume !(v129= None);
1112: v131 := unlift_option v129;
1111: Skip;
1115: v132 := COMPARE v131 v119;
1116: v133 := GEQ v132;
1117: Assume v133= True;
1118: Skip;
1121: v135 := DUP v1;
1122: v136 := CDR v1;
1123: v137 := CAR v1;
1124: v138 := DUP v137;
1125: v139 := CAR v137;
1126: v140 := CDR v137;
1127: v141 := DUP v140;
1128: v142 := DUP v77;
1129: v143 := CAR v77;
1130: v144 := DUP v143;
1131: v145 := GET v143 v140;
1132: Assume !(v145= None);
1134: v147 := unlift_option v145;
1133: Skip;
1137: v148 := DUP v77;
1138: v149 := CDR v77;
1139: v150 := CDR v149;
1140: Assert (SUB v147 v150)_no_underflow;
1140: v151 := SUB v147 v150;
1141: v152 := SOME v151;
1142: v153 := UPDATE v143 v152 v140;
1143: v154 := PAIR v139 v153;
1144: v155 := PAIR v154 v136;
1145: v156 := DUP v155;
1146: v157 := CDR v155;
1147: v158 := CAR v155;
1148: v159 := DUP v158;
1149: v160 := CAR v158;
1150: v161 := CDR v158;
1151: v162 := DUP v161;
1152: v163 := DUP v77;
1153: v164 := CDR v77;
1154: v165 := CAR v164;
1155: v166 := DUP v165;
1156: v167 := GET v165 v161;
1157: Assume !(v167= None);
1159: v169 := unlift_option v167;
1158: Skip;
1162: v170 := DUP v77;
1163: v171 := CDR v77;
1164: v172 := CDR v171;
1165: Assert (ADD v172 v169)_no_overflow;
1165: v173 := ADD v172 v169;
1166: v174 := SOME v173;
1167: v175 := UPDATE v165 v174 v161;
1168: v176 := PAIR v160 v175;
1169: v177 := PAIR v176 v157;
1170: v178 := DUP v177;
1171: v179 := CDR v177;
1172: v180 := CAR v177;
1173: v181 := DUP v180;
1174: v182 := CDR v180;
1175: v183 := CAR v180;
1176: v184 := DUP v183;
1177: v185 := DUP v77;
1178: v186 := CAR v77;
1179: v187 := DUP v186;
1180: v188 := GET v186 v183;
1181: Assume !(v188= None);
1183: v190 := unlift_option v188;
1182: Skip;
1186: v191 := DUP v190;
1187: v192 := SENDER;
1188: v193 := DUP v192;
1189: v194 := GET v192 v190;
1190: Assume v194= None;
1193: v195 := PUSH 30 int;
1194: Skip;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume !(v25= Left x);
976: v77 := unlift_right v25;
1040: v78 := DUP v77;
1041: v79 := CDR v77;
1042: v80 := CDR v79;
1043: v81 := DUP v1;
1044: v82 := CAR v1;
1045: v83 := CDR v82;
1046: v84 := DUP v77;
1047: v85 := CAR v77;
1048: v86 := GET v85 v83;
1049: Assume !(v86= None);
1051: v88 := unlift_option v86;
1050: Skip;
1054: v89 := COMPARE v88 v80;
1055: v90 := GEQ v89;
1056: Assume v90= True;
1057: Skip;
1060: v92 := DUP v1;
1061: v93 := CAR v1;
1062: v94 := CDR v93;
1063: v95 := DUP v77;
1064: v96 := CDR v77;
1065: v97 := CAR v96;
1066: v98 := GET v97 v94;
1067: Assume !(v98= None);
1069: v100 := unlift_option v98;
1068: Skip;
1072: v101 := DUP v77;
1073: v102 := CDR v77;
1074: v103 := CDR v102;
1075: v104 := DUP v1;
1076: v105 := CAR v1;
1077: v106 := CDR v105;
1078: v107 := DUP v77;
1079: v108 := CDR v77;
1080: v109 := CAR v108;
1081: v110 := GET v109 v106;
1082: Assume !(v110= None);
1084: v112 := unlift_option v110;
1083: Skip;
1087: Assert (ADD v112 v103)_no_overflow;
1087: v113 := ADD v112 v103;
1088: v114 := COMPARE v113 v100;
1089: v115 := GT v114;
1090: Assume v115= True;
1091: Skip;
1094: v117 := DUP v77;
1095: v118 := CDR v77;
1096: v119 := CDR v118;
1097: v120 := DUP v1;
1098: v121 := CAR v1;
1099: v122 := CAR v121;
1100: v123 := DUP v77;
1101: v124 := CAR v77;
1102: v125 := GET v124 v122;
1103: Assume !(v125= None);
1105: v127 := unlift_option v125;
1104: Skip;
1108: v128 := SENDER;
1109: v129 := GET v128 v127;
1110: Assume !(v129= None);
1112: v131 := unlift_option v129;
1111: Skip;
1115: v132 := COMPARE v131 v119;
1116: v133 := GEQ v132;
1117: Assume v133= True;
1118: Skip;
1121: v135 := DUP v1;
1122: v136 := CDR v1;
1123: v137 := CAR v1;
1124: v138 := DUP v137;
1125: v139 := CAR v137;
1126: v140 := CDR v137;
1127: v141 := DUP v140;
1128: v142 := DUP v77;
1129: v143 := CAR v77;
1130: v144 := DUP v143;
1131: v145 := GET v143 v140;
1132: Assume !(v145= None);
1134: v147 := unlift_option v145;
1133: Skip;
1137: v148 := DUP v77;
1138: v149 := CDR v77;
1139: v150 := CDR v149;
1140: Assert (SUB v147 v150)_no_underflow;
1140: v151 := SUB v147 v150;
1141: v152 := SOME v151;
1142: v153 := UPDATE v143 v152 v140;
1143: v154 := PAIR v139 v153;
1144: v155 := PAIR v154 v136;
1145: v156 := DUP v155;
1146: v157 := CDR v155;
1147: v158 := CAR v155;
1148: v159 := DUP v158;
1149: v160 := CAR v158;
1150: v161 := CDR v158;
1151: v162 := DUP v161;
1152: v163 := DUP v77;
1153: v164 := CDR v77;
1154: v165 := CAR v164;
1155: v166 := DUP v165;
1156: v167 := GET v165 v161;
1157: Assume !(v167= None);
1159: v169 := unlift_option v167;
1158: Skip;
1162: v170 := DUP v77;
1163: v171 := CDR v77;
1164: v172 := CDR v171;
1165: Assert (ADD v172 v169)_no_overflow;
1165: v173 := ADD v172 v169;
1166: v174 := SOME v173;
1167: v175 := UPDATE v165 v174 v161;
1168: v176 := PAIR v160 v175;
1169: v177 := PAIR v176 v157;
1170: v178 := DUP v177;
1171: v179 := CDR v177;
1172: v180 := CAR v177;
1173: v181 := DUP v180;
1174: v182 := CDR v180;
1175: v183 := CAR v180;
1176: v184 := DUP v183;
1177: v185 := DUP v77;
1178: v186 := CAR v77;
1179: v187 := DUP v186;
1180: v188 := GET v186 v183;
1181: Assume v188= None;
1184: v189 := PUSH 30 int;
1185: Skip;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume !(v25= Left x);
976: v77 := unlift_right v25;
1040: v78 := DUP v77;
1041: v79 := CDR v77;
1042: v80 := CDR v79;
1043: v81 := DUP v1;
1044: v82 := CAR v1;
1045: v83 := CDR v82;
1046: v84 := DUP v77;
1047: v85 := CAR v77;
1048: v86 := GET v85 v83;
1049: Assume !(v86= None);
1051: v88 := unlift_option v86;
1050: Skip;
1054: v89 := COMPARE v88 v80;
1055: v90 := GEQ v89;
1056: Assume v90= True;
1057: Skip;
1060: v92 := DUP v1;
1061: v93 := CAR v1;
1062: v94 := CDR v93;
1063: v95 := DUP v77;
1064: v96 := CDR v77;
1065: v97 := CAR v96;
1066: v98 := GET v97 v94;
1067: Assume !(v98= None);
1069: v100 := unlift_option v98;
1068: Skip;
1072: v101 := DUP v77;
1073: v102 := CDR v77;
1074: v103 := CDR v102;
1075: v104 := DUP v1;
1076: v105 := CAR v1;
1077: v106 := CDR v105;
1078: v107 := DUP v77;
1079: v108 := CDR v77;
1080: v109 := CAR v108;
1081: v110 := GET v109 v106;
1082: Assume !(v110= None);
1084: v112 := unlift_option v110;
1083: Skip;
1087: Assert (ADD v112 v103)_no_overflow;
1087: v113 := ADD v112 v103;
1088: v114 := COMPARE v113 v100;
1089: v115 := GT v114;
1090: Assume v115= True;
1091: Skip;
1094: v117 := DUP v77;
1095: v118 := CDR v77;
1096: v119 := CDR v118;
1097: v120 := DUP v1;
1098: v121 := CAR v1;
1099: v122 := CAR v121;
1100: v123 := DUP v77;
1101: v124 := CAR v77;
1102: v125 := GET v124 v122;
1103: Assume !(v125= None);
1105: v127 := unlift_option v125;
1104: Skip;
1108: v128 := SENDER;
1109: v129 := GET v128 v127;
1110: Assume !(v129= None);
1112: v131 := unlift_option v129;
1111: Skip;
1115: v132 := COMPARE v131 v119;
1116: v133 := GEQ v132;
1117: Assume v133= True;
1118: Skip;
1121: v135 := DUP v1;
1122: v136 := CDR v1;
1123: v137 := CAR v1;
1124: v138 := DUP v137;
1125: v139 := CAR v137;
1126: v140 := CDR v137;
1127: v141 := DUP v140;
1128: v142 := DUP v77;
1129: v143 := CAR v77;
1130: v144 := DUP v143;
1131: v145 := GET v143 v140;
1132: Assume !(v145= None);
1134: v147 := unlift_option v145;
1133: Skip;
1137: v148 := DUP v77;
1138: v149 := CDR v77;
1139: v150 := CDR v149;
1140: Assert (SUB v147 v150)_no_underflow;
1140: v151 := SUB v147 v150;
1141: v152 := SOME v151;
1142: v153 := UPDATE v143 v152 v140;
1143: v154 := PAIR v139 v153;
1144: v155 := PAIR v154 v136;
1145: v156 := DUP v155;
1146: v157 := CDR v155;
1147: v158 := CAR v155;
1148: v159 := DUP v158;
1149: v160 := CAR v158;
1150: v161 := CDR v158;
1151: v162 := DUP v161;
1152: v163 := DUP v77;
1153: v164 := CDR v77;
1154: v165 := CAR v164;
1155: v166 := DUP v165;
1156: v167 := GET v165 v161;
1157: Assume v167= None;
1160: v168 := PUSH 29 int;
1161: Skip;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume !(v25= Left x);
976: v77 := unlift_right v25;
1040: v78 := DUP v77;
1041: v79 := CDR v77;
1042: v80 := CDR v79;
1043: v81 := DUP v1;
1044: v82 := CAR v1;
1045: v83 := CDR v82;
1046: v84 := DUP v77;
1047: v85 := CAR v77;
1048: v86 := GET v85 v83;
1049: Assume !(v86= None);
1051: v88 := unlift_option v86;
1050: Skip;
1054: v89 := COMPARE v88 v80;
1055: v90 := GEQ v89;
1056: Assume v90= True;
1057: Skip;
1060: v92 := DUP v1;
1061: v93 := CAR v1;
1062: v94 := CDR v93;
1063: v95 := DUP v77;
1064: v96 := CDR v77;
1065: v97 := CAR v96;
1066: v98 := GET v97 v94;
1067: Assume !(v98= None);
1069: v100 := unlift_option v98;
1068: Skip;
1072: v101 := DUP v77;
1073: v102 := CDR v77;
1074: v103 := CDR v102;
1075: v104 := DUP v1;
1076: v105 := CAR v1;
1077: v106 := CDR v105;
1078: v107 := DUP v77;
1079: v108 := CDR v77;
1080: v109 := CAR v108;
1081: v110 := GET v109 v106;
1082: Assume !(v110= None);
1084: v112 := unlift_option v110;
1083: Skip;
1087: Assert (ADD v112 v103)_no_overflow;
1087: v113 := ADD v112 v103;
1088: v114 := COMPARE v113 v100;
1089: v115 := GT v114;
1090: Assume v115= True;
1091: Skip;
1094: v117 := DUP v77;
1095: v118 := CDR v77;
1096: v119 := CDR v118;
1097: v120 := DUP v1;
1098: v121 := CAR v1;
1099: v122 := CAR v121;
1100: v123 := DUP v77;
1101: v124 := CAR v77;
1102: v125 := GET v124 v122;
1103: Assume !(v125= None);
1105: v127 := unlift_option v125;
1104: Skip;
1108: v128 := SENDER;
1109: v129 := GET v128 v127;
1110: Assume !(v129= None);
1112: v131 := unlift_option v129;
1111: Skip;
1115: v132 := COMPARE v131 v119;
1116: v133 := GEQ v132;
1117: Assume v133= True;
1118: Skip;
1121: v135 := DUP v1;
1122: v136 := CDR v1;
1123: v137 := CAR v1;
1124: v138 := DUP v137;
1125: v139 := CAR v137;
1126: v140 := CDR v137;
1127: v141 := DUP v140;
1128: v142 := DUP v77;
1129: v143 := CAR v77;
1130: v144 := DUP v143;
1131: v145 := GET v143 v140;
1132: Assume v145= None;
1135: v146 := PUSH 28 int;
1136: Skip;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume !(v25= Left x);
976: v77 := unlift_right v25;
1040: v78 := DUP v77;
1041: v79 := CDR v77;
1042: v80 := CDR v79;
1043: v81 := DUP v1;
1044: v82 := CAR v1;
1045: v83 := CDR v82;
1046: v84 := DUP v77;
1047: v85 := CAR v77;
1048: v86 := GET v85 v83;
1049: Assume !(v86= None);
1051: v88 := unlift_option v86;
1050: Skip;
1054: v89 := COMPARE v88 v80;
1055: v90 := GEQ v89;
1056: Assume v90= True;
1057: Skip;
1060: v92 := DUP v1;
1061: v93 := CAR v1;
1062: v94 := CDR v93;
1063: v95 := DUP v77;
1064: v96 := CDR v77;
1065: v97 := CAR v96;
1066: v98 := GET v97 v94;
1067: Assume !(v98= None);
1069: v100 := unlift_option v98;
1068: Skip;
1072: v101 := DUP v77;
1073: v102 := CDR v77;
1074: v103 := CDR v102;
1075: v104 := DUP v1;
1076: v105 := CAR v1;
1077: v106 := CDR v105;
1078: v107 := DUP v77;
1079: v108 := CDR v77;
1080: v109 := CAR v108;
1081: v110 := GET v109 v106;
1082: Assume !(v110= None);
1084: v112 := unlift_option v110;
1083: Skip;
1087: Assert (ADD v112 v103)_no_overflow;
1087: v113 := ADD v112 v103;
1088: v114 := COMPARE v113 v100;
1089: v115 := GT v114;
1090: Assume v115= True;
1091: Skip;
1094: v117 := DUP v77;
1095: v118 := CDR v77;
1096: v119 := CDR v118;
1097: v120 := DUP v1;
1098: v121 := CAR v1;
1099: v122 := CAR v121;
1100: v123 := DUP v77;
1101: v124 := CAR v77;
1102: v125 := GET v124 v122;
1103: Assume !(v125= None);
1105: v127 := unlift_option v125;
1104: Skip;
1108: v128 := SENDER;
1109: v129 := GET v128 v127;
1110: Assume !(v129= None);
1112: v131 := unlift_option v129;
1111: Skip;
1115: v132 := COMPARE v131 v119;
1116: v133 := GEQ v132;
1117: Assume !(v133= True);
1119: v134 := PUSH \"WrongCondition: self.data.allowance[params.fromAddr][sp.sender] >= params.value\" string;
1120: Skip;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume !(v25= Left x);
976: v77 := unlift_right v25;
1040: v78 := DUP v77;
1041: v79 := CDR v77;
1042: v80 := CDR v79;
1043: v81 := DUP v1;
1044: v82 := CAR v1;
1045: v83 := CDR v82;
1046: v84 := DUP v77;
1047: v85 := CAR v77;
1048: v86 := GET v85 v83;
1049: Assume !(v86= None);
1051: v88 := unlift_option v86;
1050: Skip;
1054: v89 := COMPARE v88 v80;
1055: v90 := GEQ v89;
1056: Assume v90= True;
1057: Skip;
1060: v92 := DUP v1;
1061: v93 := CAR v1;
1062: v94 := CDR v93;
1063: v95 := DUP v77;
1064: v96 := CDR v77;
1065: v97 := CAR v96;
1066: v98 := GET v97 v94;
1067: Assume !(v98= None);
1069: v100 := unlift_option v98;
1068: Skip;
1072: v101 := DUP v77;
1073: v102 := CDR v77;
1074: v103 := CDR v102;
1075: v104 := DUP v1;
1076: v105 := CAR v1;
1077: v106 := CDR v105;
1078: v107 := DUP v77;
1079: v108 := CDR v77;
1080: v109 := CAR v108;
1081: v110 := GET v109 v106;
1082: Assume !(v110= None);
1084: v112 := unlift_option v110;
1083: Skip;
1087: Assert (ADD v112 v103)_no_overflow;
1087: v113 := ADD v112 v103;
1088: v114 := COMPARE v113 v100;
1089: v115 := GT v114;
1090: Assume v115= True;
1091: Skip;
1094: v117 := DUP v77;
1095: v118 := CDR v77;
1096: v119 := CDR v118;
1097: v120 := DUP v1;
1098: v121 := CAR v1;
1099: v122 := CAR v121;
1100: v123 := DUP v77;
1101: v124 := CAR v77;
1102: v125 := GET v124 v122;
1103: Assume !(v125= None);
1105: v127 := unlift_option v125;
1104: Skip;
1108: v128 := SENDER;
1109: v129 := GET v128 v127;
1110: Assume v129= None;
1113: v130 := PUSH 27 int;
1114: Skip;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume !(v25= Left x);
976: v77 := unlift_right v25;
1040: v78 := DUP v77;
1041: v79 := CDR v77;
1042: v80 := CDR v79;
1043: v81 := DUP v1;
1044: v82 := CAR v1;
1045: v83 := CDR v82;
1046: v84 := DUP v77;
1047: v85 := CAR v77;
1048: v86 := GET v85 v83;
1049: Assume !(v86= None);
1051: v88 := unlift_option v86;
1050: Skip;
1054: v89 := COMPARE v88 v80;
1055: v90 := GEQ v89;
1056: Assume v90= True;
1057: Skip;
1060: v92 := DUP v1;
1061: v93 := CAR v1;
1062: v94 := CDR v93;
1063: v95 := DUP v77;
1064: v96 := CDR v77;
1065: v97 := CAR v96;
1066: v98 := GET v97 v94;
1067: Assume !(v98= None);
1069: v100 := unlift_option v98;
1068: Skip;
1072: v101 := DUP v77;
1073: v102 := CDR v77;
1074: v103 := CDR v102;
1075: v104 := DUP v1;
1076: v105 := CAR v1;
1077: v106 := CDR v105;
1078: v107 := DUP v77;
1079: v108 := CDR v77;
1080: v109 := CAR v108;
1081: v110 := GET v109 v106;
1082: Assume !(v110= None);
1084: v112 := unlift_option v110;
1083: Skip;
1087: Assert (ADD v112 v103)_no_overflow;
1087: v113 := ADD v112 v103;
1088: v114 := COMPARE v113 v100;
1089: v115 := GT v114;
1090: Assume v115= True;
1091: Skip;
1094: v117 := DUP v77;
1095: v118 := CDR v77;
1096: v119 := CDR v118;
1097: v120 := DUP v1;
1098: v121 := CAR v1;
1099: v122 := CAR v121;
1100: v123 := DUP v77;
1101: v124 := CAR v77;
1102: v125 := GET v124 v122;
1103: Assume v125= None;
1106: v126 := PUSH 27 int;
1107: Skip;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume !(v25= Left x);
976: v77 := unlift_right v25;
1040: v78 := DUP v77;
1041: v79 := CDR v77;
1042: v80 := CDR v79;
1043: v81 := DUP v1;
1044: v82 := CAR v1;
1045: v83 := CDR v82;
1046: v84 := DUP v77;
1047: v85 := CAR v77;
1048: v86 := GET v85 v83;
1049: Assume !(v86= None);
1051: v88 := unlift_option v86;
1050: Skip;
1054: v89 := COMPARE v88 v80;
1055: v90 := GEQ v89;
1056: Assume v90= True;
1057: Skip;
1060: v92 := DUP v1;
1061: v93 := CAR v1;
1062: v94 := CDR v93;
1063: v95 := DUP v77;
1064: v96 := CDR v77;
1065: v97 := CAR v96;
1066: v98 := GET v97 v94;
1067: Assume !(v98= None);
1069: v100 := unlift_option v98;
1068: Skip;
1072: v101 := DUP v77;
1073: v102 := CDR v77;
1074: v103 := CDR v102;
1075: v104 := DUP v1;
1076: v105 := CAR v1;
1077: v106 := CDR v105;
1078: v107 := DUP v77;
1079: v108 := CDR v77;
1080: v109 := CAR v108;
1081: v110 := GET v109 v106;
1082: Assume !(v110= None);
1084: v112 := unlift_option v110;
1083: Skip;
1087: Assert (ADD v112 v103)_no_overflow;
1087: v113 := ADD v112 v103;
1088: v114 := COMPARE v113 v100;
1089: v115 := GT v114;
1090: Assume !(v115= True);
1092: v116 := PUSH \"WrongCondition: (self.data.balance[params.toAddr] + params.value) > self.data.balance[params.toAddr]\" string;
1093: Skip;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume !(v25= Left x);
976: v77 := unlift_right v25;
1040: v78 := DUP v77;
1041: v79 := CDR v77;
1042: v80 := CDR v79;
1043: v81 := DUP v1;
1044: v82 := CAR v1;
1045: v83 := CDR v82;
1046: v84 := DUP v77;
1047: v85 := CAR v77;
1048: v86 := GET v85 v83;
1049: Assume !(v86= None);
1051: v88 := unlift_option v86;
1050: Skip;
1054: v89 := COMPARE v88 v80;
1055: v90 := GEQ v89;
1056: Assume v90= True;
1057: Skip;
1060: v92 := DUP v1;
1061: v93 := CAR v1;
1062: v94 := CDR v93;
1063: v95 := DUP v77;
1064: v96 := CDR v77;
1065: v97 := CAR v96;
1066: v98 := GET v97 v94;
1067: Assume !(v98= None);
1069: v100 := unlift_option v98;
1068: Skip;
1072: v101 := DUP v77;
1073: v102 := CDR v77;
1074: v103 := CDR v102;
1075: v104 := DUP v1;
1076: v105 := CAR v1;
1077: v106 := CDR v105;
1078: v107 := DUP v77;
1079: v108 := CDR v77;
1080: v109 := CAR v108;
1081: v110 := GET v109 v106;
1082: Assume v110= None;
1085: v111 := PUSH 26 int;
1086: Skip;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume !(v25= Left x);
976: v77 := unlift_right v25;
1040: v78 := DUP v77;
1041: v79 := CDR v77;
1042: v80 := CDR v79;
1043: v81 := DUP v1;
1044: v82 := CAR v1;
1045: v83 := CDR v82;
1046: v84 := DUP v77;
1047: v85 := CAR v77;
1048: v86 := GET v85 v83;
1049: Assume !(v86= None);
1051: v88 := unlift_option v86;
1050: Skip;
1054: v89 := COMPARE v88 v80;
1055: v90 := GEQ v89;
1056: Assume v90= True;
1057: Skip;
1060: v92 := DUP v1;
1061: v93 := CAR v1;
1062: v94 := CDR v93;
1063: v95 := DUP v77;
1064: v96 := CDR v77;
1065: v97 := CAR v96;
1066: v98 := GET v97 v94;
1067: Assume v98= None;
1070: v99 := PUSH 26 int;
1071: Skip;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume !(v25= Left x);
976: v77 := unlift_right v25;
1040: v78 := DUP v77;
1041: v79 := CDR v77;
1042: v80 := CDR v79;
1043: v81 := DUP v1;
1044: v82 := CAR v1;
1045: v83 := CDR v82;
1046: v84 := DUP v77;
1047: v85 := CAR v77;
1048: v86 := GET v85 v83;
1049: Assume !(v86= None);
1051: v88 := unlift_option v86;
1050: Skip;
1054: v89 := COMPARE v88 v80;
1055: v90 := GEQ v89;
1056: Assume !(v90= True);
1058: v91 := PUSH \"WrongCondition: self.data.balance[params.fromAddr] >= params.value\" string;
1059: Skip;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume !(v25= Left x);
976: v77 := unlift_right v25;
1040: v78 := DUP v77;
1041: v79 := CDR v77;
1042: v80 := CDR v79;
1043: v81 := DUP v1;
1044: v82 := CAR v1;
1045: v83 := CDR v82;
1046: v84 := DUP v77;
1047: v85 := CAR v77;
1048: v86 := GET v85 v83;
1049: Assume v86= None;
1052: v87 := PUSH 25 int;
1053: Skip;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume v25= Left x;
977: v26 := unlift_left v25;
978: v27 := DUP v26;
979: v28 := CDR v26;
980: v29 := DUP v1;
981: v30 := CAR v1;
982: v31 := CDR v30;
983: v32 := SENDER;
984: v33 := GET v32 v31;
985: Assume !(v33= None);
987: v35 := unlift_option v33;
986: Skip;
990: v36 := COMPARE v35 v28;
991: v37 := GEQ v36;
992: Assume v37= True;
993: Skip;
996: v39 := DUP v1;
997: v40 := CDR v1;
998: v41 := CAR v1;
999: v42 := DUP v41;
1000: v43 := CAR v41;
1001: v44 := CDR v41;
1002: v45 := DUP v44;
1003: v46 := SENDER;
1004: v47 := DUP v46;
1005: v48 := GET v46 v44;
1006: Assume !(v48= None);
1008: v50 := unlift_option v48;
1007: Skip;
1011: v51 := DUP v26;
1012: v52 := CDR v26;
1013: Assert (SUB v50 v52)_no_underflow;
1013: v53 := SUB v50 v52;
1014: v54 := SOME v53;
1015: v55 := UPDATE v46 v54 v44;
1016: v56 := PAIR v43 v55;
1017: v57 := PAIR v56 v40;
1018: v58 := DUP v57;
1019: v59 := CDR v57;
1020: v60 := CAR v57;
1021: v61 := DUP v60;
1022: v62 := CAR v60;
1023: v63 := CDR v60;
1024: v64 := DUP v63;
1025: v65 := DUP v26;
1026: v66 := CAR v26;
1027: v67 := DUP v66;
1028: v68 := GET v66 v63;
1029: Assume !(v68= None);
1031: v70 := unlift_option v68;
1030: Skip;
1034: v71 := CDR v26;
1035: Assert (ADD v71 v70)_no_overflow;
1035: v72 := ADD v71 v70;
1036: v73 := SOME v72;
1037: v74 := UPDATE v66 v73 v63;
1038: v75 := PAIR v62 v74;
1039: v76 := PAIR v75 v59;
1205: v206 := v76;
948: Skip;
1206: v207 := v206;
947: Skip;
1208: v208 := NIL operation;
1209: v209 := PAIR v208 v207;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume v25= Left x;
977: v26 := unlift_left v25;
978: v27 := DUP v26;
979: v28 := CDR v26;
980: v29 := DUP v1;
981: v30 := CAR v1;
982: v31 := CDR v30;
983: v32 := SENDER;
984: v33 := GET v32 v31;
985: Assume !(v33= None);
987: v35 := unlift_option v33;
986: Skip;
990: v36 := COMPARE v35 v28;
991: v37 := GEQ v36;
992: Assume v37= True;
993: Skip;
996: v39 := DUP v1;
997: v40 := CDR v1;
998: v41 := CAR v1;
999: v42 := DUP v41;
1000: v43 := CAR v41;
1001: v44 := CDR v41;
1002: v45 := DUP v44;
1003: v46 := SENDER;
1004: v47 := DUP v46;
1005: v48 := GET v46 v44;
1006: Assume !(v48= None);
1008: v50 := unlift_option v48;
1007: Skip;
1011: v51 := DUP v26;
1012: v52 := CDR v26;
1013: Assert (SUB v50 v52)_no_underflow;
1013: v53 := SUB v50 v52;
1014: v54 := SOME v53;
1015: v55 := UPDATE v46 v54 v44;
1016: v56 := PAIR v43 v55;
1017: v57 := PAIR v56 v40;
1018: v58 := DUP v57;
1019: v59 := CDR v57;
1020: v60 := CAR v57;
1021: v61 := DUP v60;
1022: v62 := CAR v60;
1023: v63 := CDR v60;
1024: v64 := DUP v63;
1025: v65 := DUP v26;
1026: v66 := CAR v26;
1027: v67 := DUP v66;
1028: v68 := GET v66 v63;
1029: Assume v68= None;
1032: v69 := PUSH 17 int;
1033: Skip;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume v25= Left x;
977: v26 := unlift_left v25;
978: v27 := DUP v26;
979: v28 := CDR v26;
980: v29 := DUP v1;
981: v30 := CAR v1;
982: v31 := CDR v30;
983: v32 := SENDER;
984: v33 := GET v32 v31;
985: Assume !(v33= None);
987: v35 := unlift_option v33;
986: Skip;
990: v36 := COMPARE v35 v28;
991: v37 := GEQ v36;
992: Assume v37= True;
993: Skip;
996: v39 := DUP v1;
997: v40 := CDR v1;
998: v41 := CAR v1;
999: v42 := DUP v41;
1000: v43 := CAR v41;
1001: v44 := CDR v41;
1002: v45 := DUP v44;
1003: v46 := SENDER;
1004: v47 := DUP v46;
1005: v48 := GET v46 v44;
1006: Assume v48= None;
1009: v49 := PUSH 16 int;
1010: Skip;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume v25= Left x;
977: v26 := unlift_left v25;
978: v27 := DUP v26;
979: v28 := CDR v26;
980: v29 := DUP v1;
981: v30 := CAR v1;
982: v31 := CDR v30;
983: v32 := SENDER;
984: v33 := GET v32 v31;
985: Assume !(v33= None);
987: v35 := unlift_option v33;
986: Skip;
990: v36 := COMPARE v35 v28;
991: v37 := GEQ v36;
992: Assume !(v37= True);
994: v38 := PUSH \"WrongCondition: self.data.balance[sp.sender] >= params.value\" string;
995: Skip;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume !(v2= Left x);
949: v25 := unlift_right v2;
975: Assume v25= Left x;
977: v26 := unlift_left v25;
978: v27 := DUP v26;
979: v28 := CDR v26;
980: v29 := DUP v1;
981: v30 := CAR v1;
982: v31 := CDR v30;
983: v32 := SENDER;
984: v33 := GET v32 v31;
985: Assume v33= None;
988: v34 := PUSH 15 int;
989: Skip;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume v2= Left x;
950: v3 := unlift_left v2;
951: v4 := DUP v1;
952: v5 := CDR v1;
953: v6 := CAR v1;
954: v7 := DUP v6;
955: v8 := CDR v6;
956: v9 := CAR v6;
957: v10 := DUP v9;
958: v11 := SENDER;
959: v12 := DUP v11;
960: v13 := GET v11 v9;
961: Assume !(v13= None);
963: v15 := unlift_option v13;
962: Skip;
966: v16 := DUP v3;
967: v17 := CAR v3;
968: v18 := CDR v3;
969: v19 := SOME v18;
970: v20 := UPDATE v17 v19 v15;
971: v21 := SOME v20;
972: v22 := UPDATE v11 v21 v9;
973: v23 := PAIR v22 v8;
974: v24 := PAIR v23 v5;
1207: v207 := v24;
947: Skip;
1208: v208 := NIL operation;
1209: v209 := PAIR v208 v207;


942: Skip;
943: v0 := DUP param_storage;
944: v1 := CDR param_storage;
945: v2 := CAR param_storage;
946: Assume v2= Left x;
950: v3 := unlift_left v2;
951: v4 := DUP v1;
952: v5 := CDR v1;
953: v6 := CAR v1;
954: v7 := DUP v6;
955: v8 := CDR v6;
956: v9 := CAR v6;
957: v10 := DUP v9;
958: v11 := SENDER;
959: v12 := DUP v11;
960: v13 := GET v11 v9;
961: Assume v13= None;
964: v14 := PUSH 21 int;
965: Skip;


2
0
