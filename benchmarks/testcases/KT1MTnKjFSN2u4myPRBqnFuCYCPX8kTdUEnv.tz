parameter (or
            (or
              (or
                (or %contract_admin
                  (or (or (unit %confirm_minter_admin) (bool %pause_contract))
                      (or (address %set_administrator) (address %set_oracle)))
                  (address %set_signer))
                (or %fees
                  (or (pair %withdraw_all_tokens (address %fa2) (list %tokens nat))
                      (unit %withdraw_all_xtz))
                  (or
                    (pair %withdraw_token (address %fa2)
                                          (pair (nat %token_id) (nat %amount)))
                    (mutez %withdraw_xtz))))
              (or
                (or %governance
                  (or (or (address %set_dev_pool) (nat %set_erc20_unwrapping_fees))
                      (or (nat %set_erc20_wrapping_fees)
                          (mutez %set_erc721_unwrapping_fees)))
                  (or
                    (or (mutez %set_erc721_wrapping_fees)
                        (pair %set_fees_share (nat %dev_pool)
                                              (pair (nat %signers) (nat %staking))))
                    (or (address %set_governance) (address %set_staking))))
                (or %oracle
                  (pair %distribute_tokens (list %signers key_hash)
                                           (list %tokens (pair address nat)))
                  (list %distribute_xtz key_hash))))
            (or
              (or
                (or %signer
                  (or
                    (pair %add_erc20 (bytes %eth_contract)
                                     (pair %token_address address nat))
                    (pair %add_erc721 (bytes %eth_contract) (address %token_contract)))
                  (or
                    (pair %mint_erc20 (bytes %erc_20)
                                      (pair
                                        (pair %event_id (bytes %block_hash)
                                                        (nat %log_index))
                                        (pair (address %owner) (nat %amount))))
                    (pair %mint_erc721 (bytes %erc_721)
                                       (pair
                                         (pair %event_id (bytes %block_hash)
                                                         (nat %log_index))
                                         (pair (address %owner) (nat %token_id))))))
                (pair %signer_ops (key_hash %signer) (address %payment_address)))
              (or %unwrap
                (pair %unwrap_erc20 (bytes %erc_20)
                                    (pair (nat %amount)
                                          (pair (nat %fees) (bytes %destination))))
                (pair %unwrap_erc721 (bytes %erc_721)
                                     (pair (nat %token_id) (bytes %destination))))));
storage (pair
          (pair
            (pair
              (pair %admin
                (pair (pair (address %administrator) (address %oracle))
                      (pair (bool %paused) (option %pending_admin address)))
                (address %signer))
              (pair %assets
                (pair (map %erc20_tokens bytes (pair address nat))
                      (map %erc721_tokens bytes address))
                (big_map %mints (pair (bytes %block_hash) (nat %log_index)) unit)))
            (pair
              (pair %fees
                (pair (map %signers key_hash address)
                      (big_map %tokens (pair address (pair address nat)) nat))
                (big_map %xtz address mutez))
              (pair %governance
                (pair (pair (address %contract) (address %dev_pool))
                      (pair (nat %erc20_unwrapping_fees) (nat %erc20_wrapping_fees)))
                (pair
                  (pair (mutez %erc721_unwrapping_fees) (mutez %erc721_wrapping_fees))
                  (pair
                    (pair %fees_share (nat %dev_pool)
                                      (pair (nat %signers) (nat %staking)))
                    (address %staking))))))
          (big_map %metadata string bytes));
code { LAMBDA
         (pair (pair (pair address address) (pair bool (option address))) address)
         unit
         { SENDER ;
           SWAP ;
           CAR ;
           CAR ;
           CAR ;
           COMPARE ;
           NEQ ;
           IF { PUSH string "NOT_ADMIN" ; FAILWITH } { PUSH unit Unit } } ;
       LAMBDA
         (pair (pair (pair address address) (pair bool (option address))) address)
         unit
         { SENDER ;
           SWAP ;
           CDR ;
           COMPARE ;
           NEQ ;
           IF { PUSH string "NOT_SIGNER" ; FAILWITH } { PUSH unit Unit } } ;
       LAMBDA
         (pair bytes (map bytes (pair address nat)))
         (pair address nat)
         { UNPAIR ; GET ; IF_NONE { PUSH string "UNKNOWN_TOKEN" ; FAILWITH } {} } ;
       LAMBDA
         (pair bytes (map bytes address))
         address
         { UNPAIR ; GET ; IF_NONE { PUSH string "UNKNOWN_TOKEN" ; FAILWITH } {} } ;
       LAMBDA
         address
         (contract (list (pair address (list (pair address (pair nat nat))))))
         { CONTRACT %transfer (list (pair (address %from_)
                                         (list %txs (pair (address %to_)
                                                         (pair (nat %token_id)
                                                               (nat %amount)))))) ;
           IF_NONE { PUSH string "CANNOT CALLBACK FA2" ; FAILWITH } {} } ;
       LAMBDA
         address
         (contract (or (list (pair address (pair nat nat)))
                      (list (pair address (pair nat nat)))))
         { CONTRACT %tokens (or
                              (list %burn_tokens (pair (address %owner)
                                                      (pair (nat %token_id)
                                                            (nat %amount))))
                              (list %mint_tokens (pair (address %owner)
                                                      (pair (nat %token_id)
                                                            (nat %amount))))) ;
           IF_NONE { PUSH string "CONTRACT_NOT_COMPATIBLE" ; FAILWITH } {} } ;
       LAMBDA
         unit
         unit
         { DROP ;
           PUSH mutez 0 ;
           AMOUNT ;
           COMPARE ;
           GT ;
           IF { PUSH string "FORBIDDEN_XTZ" ; FAILWITH } { PUSH unit Unit } } ;
       LAMBDA
         (pair (pair bytes nat) (big_map (pair bytes nat) unit))
         unit
         { UNPAIR ;
           GET ;
           IF_NONE { UNIT } { DROP ; PUSH string "TX_ALREADY_MINTED" ; FAILWITH } } ;
       LAMBDA
         (pair (pair (big_map (pair address (pair address nat)) nat) address)
               (pair address nat))
         nat
         { UNPAIR ; UNPAIR ; DUG 2 ; PAIR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
       LAMBDA
         (pair (big_map address mutez) address)
         mutez
         { UNPAIR ; SWAP ; GET ; IF_NONE { PUSH mutez 0 } {} } ;
       DUP ;
       LAMBDA
         (pair (lambda (pair (big_map address mutez) address) mutez)
               (pair (option mutez) (big_map address mutez)))
         (pair (list operation) (big_map address mutez))
         { UNPAIR ;
           SWAP ;
           UNPAIR ;
           SENDER ;
           DUP 3 ;
           PAIR ;
           DIG 3 ;
           SWAP ;
           EXEC ;
           SWAP ;
           IF_NONE
             { DUP }
             { SWAP ;
               DUP ;
               DUG 2 ;
               SWAP ;
               DUP ;
               DUG 2 ;
               COMPARE ;
               GT ;
               IF { DROP ; PUSH string "NOT_ENOUGH_XTZ" ; FAILWITH } {} } ;
           PUSH mutez 0 ;
           DUP 3 ;
           COMPARE ;
           EQ ;
           IF
             { DROP 2 ; NIL operation ; PAIR }
             { DUP ;
               SENDER ;
               CONTRACT unit ;
               IF_NONE
                 { DROP ; PUSH string "NOT_PAYABLE" ; FAILWITH }
                 { SWAP ; UNIT ; TRANSFER_TOKENS } ;
               PUSH mutez 0 ;
               DUP 3 ;
               DUP 5 ;
               SUB ;
               COMPARE ;
               EQ ;
               IF
                 { SWAP ; DROP ; SWAP ; DROP ; SWAP ; NONE mutez ; SENDER ; UPDATE }
                 { DIG 3 ; DIG 2 ; DIG 3 ; SUB ; SOME ; SENDER ; UPDATE } ;
               NIL operation ;
               DIG 2 ;
               CONS ;
               PAIR } } ;
       SWAP ;
       APPLY ;
       DUP 7 ;
       LAMBDA
         (pair
           (lambda address
                   (contract (list (pair address (list (pair address (pair nat nat)))))))
           (pair (pair address address) (list (pair address (pair nat nat)))))
         operation
         { UNPAIR ;
           SWAP ;
           UNPAIR ;
           UNPAIR ;
           SWAP ;
           DIG 3 ;
           SWAP ;
           EXEC ;
           PUSH mutez 0 ;
           NIL (pair address (list (pair address (pair nat nat)))) ;
           DIG 4 ;
           DIG 4 ;
           PAIR ;
           CONS ;
           TRANSFER_TOKENS } ;
       SWAP ;
       APPLY ;
       LAMBDA
         (pair (pair (list key_hash) (map key_hash address))
               (pair (pair (pair address address) (pair nat nat))
                     (pair (pair mutez mutez) (pair (pair nat (pair nat nat)) address))))
         (list (pair address nat))
         { UNPAIR ;
           UNPAIR ;
           NIL (pair address nat) ;
           DUP 4 ;
           CDR ;
           CDR ;
           CAR ;
           CDR ;
           CDR ;
           DUP 5 ;
           CDR ;
           CDR ;
           CDR ;
           PAIR ;
           CONS ;
           DUP 4 ;
           CDR ;
           CDR ;
           CAR ;
           CAR ;
           DUP 5 ;
           CAR ;
           CAR ;
           CDR ;
           PAIR ;
           CONS ;
           SWAP ;
           DUP ;
           DUG 2 ;
           ITER { SWAP ;
                  DUP 3 ;
                  SIZE ;
                  DUP 6 ;
                  CDR ;
                  CDR ;
                  CAR ;
                  CDR ;
                  CAR ;
                  EDIV ;
                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                  CAR ;
                  DUP 5 ;
                  DIG 3 ;
                  DUP ;
                  DUG 2 ;
                  GET ;
                  IF_NONE { IMPLICIT_ACCOUNT ; ADDRESS } { SWAP ; DROP } ;
                  PAIR ;
                  CONS } ;
           SWAP ;
           DROP ;
           SWAP ;
           DROP ;
           SWAP ;
           DROP } ;
       LAMBDA
         (pair (pair (pair address address) (pair bool (option address))) address)
         unit
         { CAR ;
           CDR ;
           CAR ;
           IF { PUSH string "CONTRACT_PAUSED" ; FAILWITH } { PUSH unit Unit } } ;
       DIG 14 ;
       UNPAIR ;
       IF_LEFT
         { DIG 2 ;
           DROP ;
           DIG 7 ;
           DROP ;
           DIG 8 ;
           DROP ;
           DIG 8 ;
           DROP ;
           DIG 8 ;
           DROP ;
           DIG 8 ;
           DROP ;
           DIG 8 ;
           DROP ;
           IF_LEFT
             { DIG 2 ;
               DROP ;
               DIG 4 ;
               DROP ;
               IF_LEFT
                 { DIG 2 ;
                   DROP ;
                   DIG 2 ;
                   DROP ;
                   DIG 2 ;
                   DROP ;
                   PUSH unit Unit ;
                   DIG 3 ;
                   SWAP ;
                   EXEC ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   SWAP ;
                   IF_LEFT
                     { IF_LEFT
                         { IF_LEFT
                             { DROP ;
                               DIG 2 ;
                               DROP ;
                               DUP ;
                               CAR ;
                               CDR ;
                               CDR ;
                               IF_NONE
                                 { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                                 { SENDER ;
                                   SWAP ;
                                   COMPARE ;
                                   EQ ;
                                   IF
                                     { DUP ;
                                       CDR ;
                                       NONE address ;
                                       DUP 3 ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       PAIR ;
                                       DIG 2 ;
                                       CAR ;
                                       CAR ;
                                       PAIR ;
                                       PAIR ;
                                       DUP ;
                                       CDR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CAR ;
                                       CDR ;
                                       DIG 2 ;
                                       CAR ;
                                       CAR ;
                                       CDR ;
                                       SENDER ;
                                       PAIR ;
                                       PAIR ;
                                       PAIR ;
                                       NIL operation ;
                                       PAIR }
                                     { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } }
                             { SWAP ;
                               DUP ;
                               DUG 2 ;
                               DIG 4 ;
                               SWAP ;
                               EXEC ;
                               DROP ;
                               SWAP ;
                               DUP ;
                               CDR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               DIG 3 ;
                               PAIR ;
                               DIG 2 ;
                               CAR ;
                               CAR ;
                               PAIR ;
                               PAIR ;
                               NIL operation ;
                               PAIR } }
                         { IF_LEFT
                             { SWAP ;
                               DUP ;
                               DUG 2 ;
                               DIG 4 ;
                               SWAP ;
                               EXEC ;
                               DROP ;
                               SWAP ;
                               DUP ;
                               CDR ;
                               DIG 2 ;
                               SOME ;
                               DUP 3 ;
                               CAR ;
                               CDR ;
                               CAR ;
                               PAIR ;
                               DIG 2 ;
                               CAR ;
                               CAR ;
                               PAIR ;
                               PAIR ;
                               NIL operation ;
                               PAIR }
                             { SWAP ;
                               DUP ;
                               DUG 2 ;
                               DIG 4 ;
                               SWAP ;
                               EXEC ;
                               DROP ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               DUP 3 ;
                               CAR ;
                               CDR ;
                               DIG 2 ;
                               DIG 3 ;
                               CAR ;
                               CAR ;
                               CAR ;
                               PAIR ;
                               PAIR ;
                               PAIR ;
                               NIL operation ;
                               PAIR } } }
                     { SWAP ; DUP ; DUG 2 ; DIG 4 ; SWAP ; EXEC ; DROP ; SWAP ; CAR ; PAIR ; NIL operation ; PAIR } ;
                   UNPAIR ;
                   DUP 3 ;
                   CDR ;
                   DUP 4 ;
                   CAR ;
                   CDR ;
                   DIG 4 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   DIG 4 ;
                   PAIR ;
                   PAIR ;
                   PAIR ;
                   SWAP ;
                   PAIR }
                 { DIG 6 ;
                   DROP ;
                   PUSH unit Unit ;
                   DIG 6 ;
                   SWAP ;
                   EXEC ;
                   DROP ;
                   IF_LEFT
                     { IF_LEFT
                         { DIG 3 ;
                           DROP ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           CDR ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           NIL (pair address (pair nat nat)) ;
                           PAIR ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           ITER { SWAP ;
                                  DUP ;
                                  UNPAIR ;
                                  DUP 4 ;
                                  DUP 6 ;
                                  CAR ;
                                  PAIR ;
                                  DUP ;
                                  SENDER ;
                                  DUP 9 ;
                                  PAIR ;
                                  PAIR ;
                                  DUP 12 ;
                                  SWAP ;
                                  EXEC ;
                                  PUSH nat 0 ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  COMPARE ;
                                  EQ ;
                                  IF
                                    { DROP 4 ; SWAP ; DROP }
                                    { DIG 4 ;
                                      DROP ;
                                      DIG 4 ;
                                      PAIR ;
                                      SENDER ;
                                      PAIR ;
                                      DIG 3 ;
                                      DIG 2 ;
                                      SENDER ;
                                      PAIR ;
                                      NONE nat ;
                                      SWAP ;
                                      UPDATE ;
                                      DUG 2 ;
                                      CONS ;
                                      PAIR } } ;
                           SWAP ;
                           DROP ;
                           SWAP ;
                           DROP ;
                           DIG 4 ;
                           DROP ;
                           UNPAIR ;
                           PUSH nat 0 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           SIZE ;
                           COMPARE ;
                           EQ ;
                           IF
                             { DROP ; SWAP ; DROP ; DIG 2 ; DROP ; NIL operation ; PAIR }
                             { DIG 2 ;
                               CAR ;
                               SELF_ADDRESS ;
                               PAIR ;
                               PAIR ;
                               DIG 3 ;
                               SWAP ;
                               EXEC ;
                               SWAP ;
                               NIL operation ;
                               DIG 2 ;
                               CONS ;
                               PAIR } ;
                           UNPAIR ;
                           DUP 3 ;
                           CDR ;
                           DUP 4 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           DUP 5 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           DIG 4 ;
                           DUP 6 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           PAIR ;
                           DIG 3 ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           SWAP ;
                           PAIR }
                         { DROP ;
                           SWAP ;
                           DROP ;
                           DIG 2 ;
                           DROP ;
                           DUP ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           NONE mutez ;
                           PAIR ;
                           DIG 2 ;
                           SWAP ;
                           EXEC ;
                           UNPAIR ;
                           DUP 3 ;
                           CDR ;
                           DUP 4 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           DIG 3 ;
                           DUP 5 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           DIG 3 ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           SWAP ;
                           PAIR } }
                     { IF_LEFT
                         { DIG 3 ;
                           DROP ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           CDR ;
                           SWAP ;
                           DUP ;
                           CDR ;
                           CAR ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           PAIR ;
                           DUP ;
                           SENDER ;
                           DUP 5 ;
                           PAIR ;
                           PAIR ;
                           DIG 6 ;
                           SWAP ;
                           EXEC ;
                           DUP 3 ;
                           CDR ;
                           CDR ;
                           SWAP ;
                           SUB ;
                           ISNAT ;
                           IF_NONE { PUSH string "NOT_ENOUGH_BALANCE" ; FAILWITH } {} ;
                           DUP 3 ;
                           CDR ;
                           CDR ;
                           DUP 4 ;
                           CDR ;
                           CAR ;
                           PAIR ;
                           SENDER ;
                           PAIR ;
                           NIL (pair address (pair nat nat)) ;
                           SWAP ;
                           CONS ;
                           DIG 3 ;
                           CAR ;
                           SELF_ADDRESS ;
                           PAIR ;
                           PAIR ;
                           DIG 5 ;
                           SWAP ;
                           EXEC ;
                           PUSH nat 0 ;
                           DUP 3 ;
                           COMPARE ;
                           EQ ;
                           IF
                             { SWAP ; DROP ; DUG 2 ; SENDER ; PAIR ; NONE nat ; SWAP ; UPDATE }
                             { DIG 3 ; DIG 2 ; SOME ; DIG 3 ; SENDER ; PAIR ; UPDATE } ;
                           NIL operation ;
                           DIG 2 ;
                           CONS ;
                           DUP 3 ;
                           CDR ;
                           DUP 4 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           DUP 5 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           DIG 4 ;
                           DUP 6 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           PAIR ;
                           DIG 3 ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           SWAP ;
                           PAIR }
                         { DIG 2 ;
                           DROP ;
                           DIG 3 ;
                           DROP ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           SWAP ;
                           SOME ;
                           PAIR ;
                           DIG 2 ;
                           SWAP ;
                           EXEC ;
                           UNPAIR ;
                           DUP 3 ;
                           CDR ;
                           DUP 4 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           DIG 3 ;
                           DUP 5 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           DIG 3 ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           SWAP ;
                           PAIR } } } }
             { DIG 3 ;
               DROP ;
               DIG 3 ;
               DROP ;
               DIG 6 ;
               DROP ;
               IF_LEFT
                 { DIG 2 ;
                   DROP ;
                   DIG 2 ;
                   DROP ;
                   DIG 2 ;
                   DROP ;
                   PUSH unit Unit ;
                   DIG 3 ;
                   SWAP ;
                   EXEC ;
                   DROP ;
                   SENDER ;
                   DUP 3 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   CAR ;
                   CAR ;
                   CAR ;
                   COMPARE ;
                   NEQ ;
                   IF { PUSH string "NOT_GOVERNANCE" ; FAILWITH } {} ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   SWAP ;
                   IF_LEFT
                     { IF_LEFT
                         { IF_LEFT
                             { SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               DUP 3 ;
                               CAR ;
                               CDR ;
                               DIG 2 ;
                               DIG 3 ;
                               CAR ;
                               CAR ;
                               CAR ;
                               PAIR ;
                               PAIR ;
                               PAIR ;
                               NIL operation ;
                               PAIR }
                             { SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               DUP 3 ;
                               CAR ;
                               CDR ;
                               CDR ;
                               DIG 2 ;
                               PAIR ;
                               DIG 2 ;
                               CAR ;
                               CAR ;
                               PAIR ;
                               PAIR ;
                               NIL operation ;
                               PAIR } }
                         { IF_LEFT
                             { SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               SWAP ;
                               DUP 3 ;
                               CAR ;
                               CDR ;
                               CAR ;
                               PAIR ;
                               DIG 2 ;
                               CAR ;
                               CAR ;
                               PAIR ;
                               PAIR ;
                               NIL operation ;
                               PAIR }
                             { SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               CDR ;
                               DUP 3 ;
                               CDR ;
                               CAR ;
                               CDR ;
                               DIG 2 ;
                               PAIR ;
                               PAIR ;
                               SWAP ;
                               CAR ;
                               PAIR ;
                               NIL operation ;
                               PAIR } } }
                     { IF_LEFT
                         { IF_LEFT
                             { SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               CDR ;
                               SWAP ;
                               DUP 3 ;
                               CDR ;
                               CAR ;
                               CAR ;
                               PAIR ;
                               PAIR ;
                               SWAP ;
                               CAR ;
                               PAIR ;
                               NIL operation ;
                               PAIR }
                             { PUSH nat 100 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               CAR ;
                               DUP 3 ;
                               CDR ;
                               CDR ;
                               DUP 4 ;
                               CAR ;
                               ADD ;
                               ADD ;
                               COMPARE ;
                               NEQ ;
                               IF
                                 { DROP 2 ; PUSH string "BAD_FEES_RATIO" ; FAILWITH }
                                 { SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   CDR ;
                                   CDR ;
                                   SWAP ;
                                   PAIR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   CAR ;
                                   PAIR ;
                                   SWAP ;
                                   CAR ;
                                   PAIR ;
                                   NIL operation ;
                                   PAIR } } }
                         { IF_LEFT
                             { SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               DUP 3 ;
                               CAR ;
                               CDR ;
                               DIG 3 ;
                               CAR ;
                               CAR ;
                               CDR ;
                               DIG 3 ;
                               PAIR ;
                               PAIR ;
                               PAIR ;
                               NIL operation ;
                               PAIR }
                             { SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               CDR ;
                               CAR ;
                               PAIR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               CAR ;
                               PAIR ;
                               SWAP ;
                               CAR ;
                               PAIR ;
                               NIL operation ;
                               PAIR } } } ;
                   UNPAIR ;
                   DUP 3 ;
                   CDR ;
                   DIG 2 ;
                   DUP 4 ;
                   CAR ;
                   CDR ;
                   CAR ;
                   PAIR ;
                   DIG 3 ;
                   CAR ;
                   CAR ;
                   PAIR ;
                   PAIR ;
                   SWAP ;
                   PAIR }
                 { PUSH unit Unit ;
                   DIG 6 ;
                   SWAP ;
                   EXEC ;
                   DROP ;
                   SENDER ;
                   DUP 3 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CDR ;
                   COMPARE ;
                   NEQ ;
                   IF { PUSH string "NOT_ORACLE" ; FAILWITH } {} ;
                   IF_LEFT
                     { DIG 3 ;
                       DROP ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       DUP 3 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       DUP 4 ;
                       DIG 3 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       DIG 2 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CAR ;
                       DUP 4 ;
                       CAR ;
                       PAIR ;
                       PAIR ;
                       DIG 6 ;
                       SWAP ;
                       EXEC ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CDR ;
                       DIG 3 ;
                       CDR ;
                       ITER { DUP 3 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              SELF_ADDRESS ;
                              DUP 5 ;
                              PAIR ;
                              PAIR ;
                              DUP 10 ;
                              SWAP ;
                              EXEC ;
                              PUSH nat 0 ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              COMPARE ;
                              EQ ;
                              IF
                                { DROP 3 }
                                { DIG 3 ;
                                  PUSH nat 0 ;
                                  PAIR ;
                                  DIG 2 ;
                                  ITER { SWAP ;
                                         UNPAIR ;
                                         DIG 2 ;
                                         UNPAIR ;
                                         SWAP ;
                                         DUP 5 ;
                                         MUL ;
                                         PUSH nat 100 ;
                                         SWAP ;
                                         EDIV ;
                                         IF_NONE { PUSH nat 0 } { CAR } ;
                                         DUP ;
                                         DUP 7 ;
                                         PAIR ;
                                         DIG 2 ;
                                         DIG 4 ;
                                         DIG 2 ;
                                         UNPAIR ;
                                         DUP ;
                                         DUP 5 ;
                                         DUP 5 ;
                                         PAIR ;
                                         PAIR ;
                                         DUP 15 ;
                                         SWAP ;
                                         EXEC ;
                                         DIG 3 ;
                                         SWAP ;
                                         DIG 3 ;
                                         ADD ;
                                         SOME ;
                                         DIG 2 ;
                                         DIG 3 ;
                                         PAIR ;
                                         UPDATE ;
                                         SWAP ;
                                         DIG 2 ;
                                         ADD ;
                                         PAIR } ;
                                  UNPAIR ;
                                  DIG 2 ;
                                  SUB ;
                                  ISNAT ;
                                  IF_NONE
                                    { PUSH string "DISTRIBUTION_FAILED" ; FAILWITH }
                                    {} ;
                                  SOME ;
                                  DIG 2 ;
                                  SELF_ADDRESS ;
                                  PAIR ;
                                  UPDATE } } ;
                       SWAP ;
                       DROP ;
                       DIG 5 ;
                       DROP ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       SWAP ;
                       DIG 2 ;
                       CAR ;
                       CAR ;
                       PAIR ;
                       PAIR ;
                       PAIR ;
                       DIG 2 ;
                       CAR ;
                       CAR ;
                       PAIR ;
                       PAIR ;
                       NIL operation ;
                       PAIR }
                     { DIG 4 ;
                       DROP ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       DUP 3 ;
                       CAR ;
                       CDR ;
                       CDR ;
                       DUP 4 ;
                       DIG 3 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CAR ;
                       CDR ;
                       CAR ;
                       SELF_ADDRESS ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       PAIR ;
                       DIG 8 ;
                       SWAP ;
                       EXEC ;
                       PUSH mutez 0 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       COMPARE ;
                       EQ ;
                       IF
                         { DROP ; SWAP ; DROP ; SWAP ; DROP ; DIG 4 ; DROP }
                         { DIG 3 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           DUP 3 ;
                           CAR ;
                           CAR ;
                           DIG 4 ;
                           PAIR ;
                           PAIR ;
                           DIG 6 ;
                           SWAP ;
                           EXEC ;
                           DUP 3 ;
                           CDR ;
                           PUSH mutez 0 ;
                           PAIR ;
                           SWAP ;
                           ITER { SWAP ;
                                  UNPAIR ;
                                  DIG 2 ;
                                  UNPAIR ;
                                  SWAP ;
                                  DUP 5 ;
                                  MUL ;
                                  PUSH nat 100 ;
                                  SWAP ;
                                  EDIV ;
                                  IF_NONE { PUSH mutez 0 } { CAR } ;
                                  DUP ;
                                  DIG 2 ;
                                  DIG 4 ;
                                  DUP ;
                                  DUP 3 ;
                                  GET ;
                                  IF_NONE { DIG 2 } { DIG 3 ; ADD } ;
                                  SOME ;
                                  DIG 2 ;
                                  UPDATE ;
                                  SWAP ;
                                  DIG 2 ;
                                  ADD ;
                                  PAIR } ;
                           UNPAIR ;
                           DIG 2 ;
                           SUB ;
                           SOME ;
                           SELF_ADDRESS ;
                           UPDATE ;
                           SWAP ;
                           CAR ;
                           PAIR } ;
                       PAIR ;
                       DIG 2 ;
                       CAR ;
                       CAR ;
                       PAIR ;
                       PAIR ;
                       NIL operation ;
                       PAIR } } } }
         { DIG 3 ;
           DROP ;
           DIG 3 ;
           DROP ;
           DIG 3 ;
           DROP ;
           DIG 3 ;
           DROP ;
           DIG 3 ;
           DROP ;
           DIG 10 ;
           DROP ;
           IF_LEFT
             { IF_LEFT
                 { SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   DIG 10 ;
                   SWAP ;
                   EXEC ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   DIG 3 ;
                   SWAP ;
                   EXEC ;
                   DROP ;
                   IF_LEFT
                     { DIG 2 ;
                       DROP ;
                       DIG 5 ;
                       DROP ;
                       DIG 5 ;
                       DROP ;
                       IF_LEFT
                         { PUSH unit Unit ;
                           DIG 3 ;
                           SWAP ;
                           EXEC ;
                           DROP ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           DUP 3 ;
                           CAR ;
                           CDR ;
                           DUP 4 ;
                           CAR ;
                           CAR ;
                           CDR ;
                           DIG 3 ;
                           DUP ;
                           CDR ;
                           CAR ;
                           DIG 6 ;
                           SWAP ;
                           EXEC ;
                           DROP ;
                           DUP ;
                           CDR ;
                           CAR ;
                           DIG 6 ;
                           SWAP ;
                           EXEC ;
                           DROP ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           DUP 3 ;
                           CAR ;
                           CDR ;
                           DIG 3 ;
                           CAR ;
                           CAR ;
                           DUP 4 ;
                           CDR ;
                           SOME ;
                           DIG 4 ;
                           CAR ;
                           UPDATE ;
                           PAIR ;
                           PAIR ;
                           DIG 3 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           PAIR ;
                           NIL operation ;
                           PAIR }
                         { PUSH unit Unit ;
                           DIG 3 ;
                           SWAP ;
                           EXEC ;
                           DROP ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           DUP 3 ;
                           CAR ;
                           CDR ;
                           DUP 4 ;
                           CAR ;
                           CAR ;
                           CDR ;
                           DIG 3 ;
                           DUP ;
                           CDR ;
                           DIG 6 ;
                           SWAP ;
                           EXEC ;
                           DROP ;
                           DUP ;
                           CDR ;
                           DIG 6 ;
                           SWAP ;
                           EXEC ;
                           DROP ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           DUP 3 ;
                           CAR ;
                           CDR ;
                           DUP 3 ;
                           CDR ;
                           SOME ;
                           DIG 3 ;
                           CAR ;
                           UPDATE ;
                           DIG 2 ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           DIG 3 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           PAIR ;
                           NIL operation ;
                           PAIR } }
                     { DIG 5 ;
                       DROP ;
                       IF_LEFT
                         { DIG 5 ;
                           DROP ;
                           PUSH unit Unit ;
                           DIG 4 ;
                           SWAP ;
                           EXEC ;
                           DROP ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CAR ;
                           CDR ;
                           DUP ;
                           CDR ;
                           DUP 3 ;
                           CDR ;
                           CAR ;
                           PAIR ;
                           DIG 4 ;
                           SWAP ;
                           EXEC ;
                           DROP ;
                           DUP 3 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           CDR ;
                           DUP 3 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           DUP ;
                           DUG 2 ;
                           PUSH nat 10000 ;
                           DUG 2 ;
                           MUL ;
                           EDIV ;
                           IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                           CAR ;
                           DUP ;
                           DIG 2 ;
                           SUB ;
                           ISNAT ;
                           IF_NONE { PUSH string "BAD_FEES" ; FAILWITH } {} ;
                           DUP 3 ;
                           CAR ;
                           CAR ;
                           DUP 5 ;
                           CAR ;
                           PAIR ;
                           DIG 7 ;
                           SWAP ;
                           EXEC ;
                           DUP ;
                           UNPAIR ;
                           DIG 8 ;
                           SWAP ;
                           EXEC ;
                           DIG 3 ;
                           DUP 3 ;
                           PAIR ;
                           DUP 7 ;
                           CDR ;
                           CDR ;
                           CAR ;
                           PAIR ;
                           PUSH nat 0 ;
                           DUP 6 ;
                           COMPARE ;
                           GT ;
                           IF
                             { NIL (pair address (pair nat nat)) ;
                               DUP 6 ;
                               DIG 4 ;
                               PAIR ;
                               SELF_ADDRESS ;
                               PAIR ;
                               CONS ;
                               SWAP ;
                               CONS }
                             { DIG 2 ; DROP ; NIL (pair address (pair nat nat)) ; SWAP ; CONS } ;
                           DIG 3 ;
                           DIG 3 ;
                           PAIR ;
                           SELF_ADDRESS ;
                           DUP 7 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           CDR ;
                           DIG 2 ;
                           UNPAIR ;
                           DUP 3 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           DUP 6 ;
                           DIG 5 ;
                           DUG 2 ;
                           PAIR ;
                           GET ;
                           IF_NONE { PUSH nat 0 } {} ;
                           DIG 3 ;
                           ADD ;
                           SOME ;
                           DIG 2 ;
                           DIG 3 ;
                           PAIR ;
                           UPDATE ;
                           DUP 6 ;
                           CDR ;
                           DUP 7 ;
                           CAR ;
                           CDR ;
                           DIG 5 ;
                           CDR ;
                           UNIT ;
                           DIG 7 ;
                           CDR ;
                           CAR ;
                           SWAP ;
                           SOME ;
                           SWAP ;
                           UPDATE ;
                           DUP 7 ;
                           CAR ;
                           CAR ;
                           CDR ;
                           CAR ;
                           PAIR ;
                           DUP 7 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           PAIR ;
                           DUP ;
                           CDR ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           DIG 6 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           DUP ;
                           CDR ;
                           DIG 5 ;
                           DIG 2 ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           PAIR ;
                           DIG 2 ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           NIL operation ;
                           DIG 3 ;
                           PUSH mutez 0 ;
                           DIG 4 ;
                           RIGHT (list (pair address (pair nat nat))) ;
                           TRANSFER_TOKENS ;
                           CONS ;
                           PAIR }
                         { DIG 3 ;
                           DROP ;
                           DIG 5 ;
                           DROP ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CAR ;
                           CDR ;
                           DUP ;
                           CDR ;
                           DUP 3 ;
                           CDR ;
                           CAR ;
                           PAIR ;
                           DIG 4 ;
                           SWAP ;
                           EXEC ;
                           DROP ;
                           DUP 3 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           AMOUNT ;
                           COMPARE ;
                           LT ;
                           IF { PUSH string "FEES_TOO_LOW" ; FAILWITH } {} ;
                           DUP ;
                           CAR ;
                           CDR ;
                           DUP 3 ;
                           CAR ;
                           PAIR ;
                           DIG 5 ;
                           SWAP ;
                           EXEC ;
                           DIG 4 ;
                           SWAP ;
                           EXEC ;
                           AMOUNT ;
                           SELF_ADDRESS ;
                           DUP 6 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           DUP ;
                           DUP 3 ;
                           GET ;
                           IF_NONE { DIG 2 } { DIG 3 ; ADD } ;
                           SOME ;
                           DIG 2 ;
                           UPDATE ;
                           DUP 5 ;
                           CDR ;
                           DUP 6 ;
                           CAR ;
                           CDR ;
                           DIG 4 ;
                           CDR ;
                           UNIT ;
                           DUP 7 ;
                           CDR ;
                           CAR ;
                           SWAP ;
                           SOME ;
                           SWAP ;
                           UPDATE ;
                           DUP 7 ;
                           CAR ;
                           CAR ;
                           CDR ;
                           CAR ;
                           PAIR ;
                           DUP 7 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           PAIR ;
                           DUP ;
                           CDR ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           DIG 3 ;
                           DIG 6 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           DIG 2 ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           NIL operation ;
                           DIG 2 ;
                           PUSH mutez 0 ;
                           NIL (pair address (pair nat nat)) ;
                           PUSH nat 1 ;
                           DUP 7 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           PAIR ;
                           DIG 6 ;
                           CDR ;
                           CDR ;
                           CAR ;
                           PAIR ;
                           CONS ;
                           RIGHT (list (pair address (pair nat nat))) ;
                           TRANSFER_TOKENS ;
                           CONS ;
                           PAIR } } }
                 { DIG 2 ;
                   DROP ;
                   DIG 2 ;
                   DROP ;
                   DIG 3 ;
                   DROP ;
                   DIG 3 ;
                   DROP ;
                   DIG 3 ;
                   DROP ;
                   DIG 3 ;
                   DROP ;
                   PUSH unit Unit ;
                   DIG 3 ;
                   SWAP ;
                   EXEC ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   DIG 3 ;
                   SWAP ;
                   EXEC ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CDR ;
                   DUP 3 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   DUP 4 ;
                   CAR ;
                   CDR ;
                   CAR ;
                   CDR ;
                   DUP 5 ;
                   CAR ;
                   CDR ;
                   CAR ;
                   CAR ;
                   CDR ;
                   DUP 6 ;
                   CAR ;
                   CDR ;
                   CAR ;
                   CAR ;
                   CAR ;
                   DUP 6 ;
                   CDR ;
                   SOME ;
                   DIG 6 ;
                   CAR ;
                   UPDATE ;
                   PAIR ;
                   PAIR ;
                   PAIR ;
                   DIG 2 ;
                   CAR ;
                   CAR ;
                   PAIR ;
                   PAIR ;
                   NIL operation ;
                   PAIR } }
             { DIG 3 ;
               DROP ;
               DIG 5 ;
               DROP ;
               DIG 7 ;
               DROP ;
               SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               CAR ;
               CAR ;
               DIG 3 ;
               SWAP ;
               EXEC ;
               DROP ;
               IF_LEFT
                 { DIG 4 ;
                   DROP ;
                   PUSH unit Unit ;
                   DIG 3 ;
                   SWAP ;
                   EXEC ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   CAR ;
                   CAR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   PAIR ;
                   DIG 4 ;
                   SWAP ;
                   EXEC ;
                   DUP ;
                   UNPAIR ;
                   DIG 5 ;
                   SWAP ;
                   EXEC ;
                   DUP 5 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   CAR ;
                   CDR ;
                   CAR ;
                   DUP 5 ;
                   CDR ;
                   CAR ;
                   PUSH nat 10000 ;
                   DUG 2 ;
                   MUL ;
                   EDIV ;
                   IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                   CAR ;
                   DUP 5 ;
                   CDR ;
                   CDR ;
                   CAR ;
                   COMPARE ;
                   LT ;
                   IF { PUSH string "FEES_TOO_LOW" ; FAILWITH } {} ;
                   DUP ;
                   PUSH mutez 0 ;
                   NIL (pair address (pair nat nat)) ;
                   DUP 7 ;
                   CDR ;
                   CDR ;
                   CAR ;
                   DUP 8 ;
                   CDR ;
                   CAR ;
                   ADD ;
                   DUP 6 ;
                   PAIR ;
                   SENDER ;
                   PAIR ;
                   CONS ;
                   LEFT (list (pair address (pair nat nat))) ;
                   TRANSFER_TOKENS ;
                   PUSH nat 0 ;
                   DUP 6 ;
                   CDR ;
                   CDR ;
                   CAR ;
                   COMPARE ;
                   EQ ;
                   IF
                     { SWAP ; DROP ; SWAP ; DROP ; NIL operation ; SWAP ; CONS }
                     { NIL operation ;
                       DIG 2 ;
                       PUSH mutez 0 ;
                       NIL (pair address (pair nat nat)) ;
                       DUP 8 ;
                       CDR ;
                       CDR ;
                       CAR ;
                       DIG 6 ;
                       PAIR ;
                       SELF_ADDRESS ;
                       PAIR ;
                       CONS ;
                       RIGHT (list (pair address (pair nat nat))) ;
                       TRANSFER_TOKENS ;
                       CONS ;
                       SWAP ;
                       CONS } ;
                   DIG 2 ;
                   CDR ;
                   CDR ;
                   CAR ;
                   DIG 2 ;
                   PAIR ;
                   SELF_ADDRESS ;
                   DUP 4 ;
                   CAR ;
                   CDR ;
                   CAR ;
                   CAR ;
                   CDR ;
                   DIG 2 ;
                   UNPAIR ;
                   DUP 3 ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   DUP 6 ;
                   DIG 5 ;
                   DUG 2 ;
                   PAIR ;
                   GET ;
                   IF_NONE { PUSH nat 0 } {} ;
                   DIG 3 ;
                   ADD ;
                   SOME ;
                   DIG 2 ;
                   DIG 3 ;
                   PAIR ;
                   UPDATE ;
                   DUP 3 ;
                   CDR ;
                   DUP 4 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   DUP 5 ;
                   CAR ;
                   CDR ;
                   CAR ;
                   CDR ;
                   DIG 3 ;
                   DUP 6 ;
                   CAR ;
                   CDR ;
                   CAR ;
                   CAR ;
                   CAR ;
                   PAIR ;
                   PAIR ;
                   PAIR ;
                   DIG 3 ;
                   CAR ;
                   CAR ;
                   PAIR ;
                   PAIR ;
                   SWAP ;
                   PAIR }
                 { DIG 2 ;
                   DROP ;
                   DIG 4 ;
                   DROP ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   CDR ;
                   CAR ;
                   CAR ;
                   AMOUNT ;
                   COMPARE ;
                   LT ;
                   IF { PUSH string "FEES_TOO_LOW" ; FAILWITH } {} ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   CAR ;
                   CDR ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   CAR ;
                   PAIR ;
                   DIG 4 ;
                   SWAP ;
                   EXEC ;
                   DIG 3 ;
                   SWAP ;
                   EXEC ;
                   PUSH mutez 0 ;
                   NIL (pair address (pair nat nat)) ;
                   PUSH nat 1 ;
                   DIG 4 ;
                   CDR ;
                   CAR ;
                   PAIR ;
                   SENDER ;
                   PAIR ;
                   CONS ;
                   LEFT (list (pair address (pair nat nat))) ;
                   TRANSFER_TOKENS ;
                   AMOUNT ;
                   SELF_ADDRESS ;
                   DUP 4 ;
                   CAR ;
                   CDR ;
                   CAR ;
                   CDR ;
                   DUP ;
                   DUP 3 ;
                   GET ;
                   IF_NONE { DIG 2 } { DIG 3 ; ADD } ;
                   SOME ;
                   DIG 2 ;
                   UPDATE ;
                   DUP 3 ;
                   CDR ;
                   DUP 4 ;
                   CAR ;
                   CDR ;
                   CDR ;
                   DIG 2 ;
                   DUP 5 ;
                   CAR ;
                   CDR ;
                   CAR ;
                   CAR ;
                   PAIR ;
                   PAIR ;
                   DIG 3 ;
                   CAR ;
                   CAR ;
                   PAIR ;
                   PAIR ;
                   NIL operation ;
                   DIG 2 ;
                   CONS ;
                   PAIR } } } }