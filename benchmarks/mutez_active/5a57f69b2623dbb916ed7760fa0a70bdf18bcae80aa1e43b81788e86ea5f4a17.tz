# Balance: 40.5
parameter
  (or (pair %set_data
         (key_hash %delegate)
         (pair (option %data
                  (pair (pair (pair (bytes %bakerName) (bool %openForDelegation))
                              (bytes %bakerOffchainRegistryUrl))
                        (pair (pair (nat %split) (list %bakerPaysFromAccounts address))
                              (pair (pair (pair (nat %minDelegation) (bool %subtractPayoutsLessThanMin))
                                          (pair (int %payoutDelay) (pair (nat %payoutFrequency) (int %minPayout))))
                                    (pair (pair (bool %bakerChargesTransactionFee) (nat %paymentConfigMask))
                                          (pair (nat %overDelegationThreshold)
                                                (bool %subtractRewardsFromUninvitedDelegation)))))))
               (option %reporterAccount address)))
      (or (pair %set_fees (mutez %signup_fee) (mutez %update_fee))
          (contract %withdraw unit))) ;
storage
  (pair (big_map
           key_hash
           (pair (pair (option %data
                          (pair (pair (pair (bytes %bakerName) (bool %openForDelegation))
                                      (bytes %bakerOffchainRegistryUrl))
                                (pair (pair (nat %split) (list %bakerPaysFromAccounts address))
                                      (pair (pair (pair (nat %minDelegation) (bool %subtractPayoutsLessThanMin))
                                                  (pair (int %payoutDelay) (pair (nat %payoutFrequency) (int %minPayout))))
                                            (pair (pair (bool %bakerChargesTransactionFee) (nat %paymentConfigMask))
                                                  (pair (nat %overDelegationThreshold)
                                                        (bool %subtractRewardsFromUninvitedDelegation)))))))
                       (option %reporterAccount address))
                 (timestamp %last_update)))
        (pair (address %owner) (pair (mutez %signup_fee) (mutez %update_fee)))) ;
code { UNPAIR ;
       IF_LEFT
         { DUP ;
           CDR ;
           CAR ;
           IF_SOME
             { CAR ;
               DUP ;
               CAR ;
               CAR ;
               SIZE ;
               PUSH nat 61 ;
               ASSERT_CMPGT ;
               CDR ;
               SIZE ;
               PUSH nat 81 ;
               ASSERT_CMPGT }
             {} ;
           UNPAIR ;
           DUP 3 ;
           CAR ;
           DUP 2 ;
           GET @from_storage ;
           IF_NONE
             { DUP ;
               IMPLICIT_ACCOUNT ;
               ADDRESS ;
               SENDER ;
               ASSERT_CMPEQ ;
               DUP 3 ;
               { CDR ; CDR ; CAR %signup_fee } ;
               AMOUNT ;
               ASSERT_CMPEQ }
             { { CAR ; CDR %reporterAccount } ;
               IF_NONE { PUSH bool False } { SENDER ; COMPARE ; EQ } ;
               DIP { DUP ; IMPLICIT_ACCOUNT ; ADDRESS ; SENDER ; COMPARE ; EQ } ;
               OR ;
               ASSERT ;
               DUP 3 ;
               { CDR ; CDR ; CDR %update_fee } ;
               AMOUNT ;
               ASSERT_CMPEQ } ;
           DIP { NOW ; SWAP ; PAIR ; SOME ; DIP { UNPAIR } } ;
           UPDATE ;
           PAIR ;
           NIL operation ;
           PAIR }
         { DUP 2 ;
           { CDR ; CAR %owner } ;
           SENDER ;
           ASSERT_CMPEQ ;
           AMOUNT ;
           PUSH mutez 0 ;
           ASSERT_CMPEQ ;
           IF_LEFT
             { SWAP ; SET_CDDR ; NIL operation ; PAIR }
             { BALANCE ; UNIT ; TRANSFER_TOKENS ; NIL operation ; SWAP ; CONS ; PAIR } } }