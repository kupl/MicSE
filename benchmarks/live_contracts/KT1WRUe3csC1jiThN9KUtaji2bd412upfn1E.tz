# Key Hash: KT1WRUe3csC1jiThN9KUtaji2bd412upfn1E
# Code Hash: e623dc27491846bb426e6cfc86410c1cbdd91c0e69c072112e6c80a8603ffa53
# Balance: 3.88 (21.03.03. ACCESSED)
parameter
  (or (lambda %do unit (list operation))
      (list %default (pair (pair nat nat) (pair nat (pair nat (pair nat nat)))))) ;
storage (pair key_hash (pair (big_map nat (pair nat mutez)) (pair nat timestamp))) ;
code { DUP ;
       CAR ;
       IF_LEFT
         { PUSH mutez 0 ;
           AMOUNT ;
           ASSERT_CMPEQ ;
           DUP 2 ;
           CDR ;
           CAR ;
           IMPLICIT_ACCOUNT ;
           ADDRESS ;
           SENDER ;
           IFCMPNEQ
             { SENDER ; PUSH string "Only the owner can operate." ; PAIR ; FAILWITH }
             { UNIT ; EXEC ; DIP { CDR } ; PAIR } }
         { DIP { CDR ; DUP ; CDR } ;
           PAIR ;
           { DUP ;
             DIP { CDR } ;
             CAR ;
             DUP 2 ;
             CDDR ;
             NOW ;
             COMPARE ;
             GT ;
             IF { PUSH string "The image bid contract is now closed" ; FAILWITH }
                { UNIT } ;
             DROP ;
             DUP @parameter ;
             SIZE @len ;
             DUP @len ;
             AMOUNT ;
             EDIV ;
             IF_NONE { PUSH mutez 0 } { CAR @a } ;
             RENAME @pixel_amount ;
             DUP 4 ;
             { CDR ; CAR @size } ;
             DUP @storage 5 ;
             CDR ;
             DUP 6 ;
             CAR ;
             DUP @parameter 6 ;
             ITER { RENAME @_pt_pcolor_image_slash_9 ;
                    DIP { DUP } ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    CAR @pt ;
                    DUP 2 ;
                    CAR ;
                    CDR @pcolor ;
                    DUP @size 6 ;
                    DUP 3 ;
                    CDR ;
                    COMPARE ;
                    GT ;
                    DUP @size 7 ;
                    DUP 4 ;
                    CAR ;
                    COMPARE ;
                    GE ;
                    OR ;
                    IF { DUP @size 6 ;
                         PUSH string "Invalid coordinates, image has square size" ;
                         PAIR ;
                         FAILWITH }
                       { UNIT } ;
                    DROP ;
                    DUP 2 ;
                    CDR ;
                    DUP @size 7 ;
                    DUP 4 ;
                    CAR ;
                    MUL ;
                    ADD @pt ;
                    PUSH nat 255 ;
                    DUP 3 ;
                    CDDDR ;
                    COMPARE ;
                    GT ;
                    PUSH nat 255 ;
                    DUP 4 ;
                    CDDAR ;
                    COMPARE ;
                    GT ;
                    OR ;
                    PUSH nat 255 ;
                    DUP 4 ;
                    CDAR ;
                    COMPARE ;
                    GT ;
                    OR ;
                    PUSH nat 255 ;
                    DUP 4 ;
                    CAR ;
                    COMPARE ;
                    GT ;
                    OR ;
                    IF { PUSH string
                              "Invalid color, must be an RGBA value with each component between 0 and 255" ;
                         FAILWITH }
                       { UNIT } ;
                    DROP ;
                    DUP 11 ;
                    CAR ;
                    DUP @pt 2 ;
                    GET ;
                    IF_NONE
                      { PUSH (pair nat (pair nat (pair nat mutez))) (Pair 255 (Pair 255 (Pair 255 10000))) }
                      { DUP ;
                        CAR @old_color ;
                        PUSH mutez 10000 ;
                        DUP 3 ;
                        DIP 3 { DROP } ;
                        CDR @prev_amount ;
                        ADD ;
                        PUSH nat 255 ;
                        DUP 3 ;
                        AND ;
                        PAIR ;
                        PUSH nat 255 ;
                        PUSH nat 8 ;
                        DUP 4 ;
                        LSR ;
                        AND ;
                        PAIR ;
                        PUSH nat 255 ;
                        PUSH nat 16 ;
                        DUP 4 ;
                        DIP 4 { DROP } ;
                        LSR ;
                        AND ;
                        PAIR } ;
                    RENAME @_old_r_old_g_old_b_min_amount ;
                    DUP ;
                    CAR @old_r ;
                    DUP 2 ;
                    { CDR ; CAR @old_g } ;
                    DUP 3 ;
                    { CDR ; CDR ; CAR @old_b } ;
                    DUP 4 ;
                    { CDR ; CDR ; CDR @min_amount } ;
                    DUP @min_amount ;
                    DUP @pixel_amount 14 ;
                    COMPARE ;
                    LT ;
                    IF { DUP @len 14 ;
                         DUP @min_amount 2 ;
                         MUL ;
                         PUSH string "Whole amount must be greater than this value to update this pixel" ;
                         PAIR ;
                         FAILWITH }
                       { UNIT } ;
                    DROP ;
                    DUP 7 ;
                    { CDR ; CDR ; CDR @alpha } ;
                    PUSH nat 255 ;
                    DUP @alpha 2 ;
                    COMPARE ;
                    EQ ;
                    IF { DUP 8 ; CDDAR ; DUP 9 ; CDAR ; PAIR ; DUP 9 ; CAR ; PAIR }
                       { PUSH nat 0 ;
                         DUP @alpha 2 ;
                         COMPARE ;
                         EQ ;
                         IF { DUP @old_b 3 ; DUP @old_g 5 ; PAIR ; DUP @old_r 6 ; PAIR }
                            { DUP @alpha ;
                              PUSH nat 255 ;
                              SUB ;
                              ISNAT ;
                              IF_NONE { PUSH nat 255 } {} ;
                              RENAME @trans ;
                              PUSH nat 255 ;
                              DUP @alpha 3 ;
                              DUP 11 ;
                              CDDAR ;
                              MUL ;
                              EDIV ;
                              IF_NONE
                                { UNIT ; FAILWITH }
                                { PUSH nat 255 ;
                                  DUP @trans 3 ;
                                  DUP @old_b 7 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { UNIT ; FAILWITH } { CAR @b2 ; DUP 2 ; CAR @b1 ; ADD } ;
                                  DIP { DROP } } ;
                              RENAME @b ;
                              PUSH nat 255 ;
                              DUP @alpha 4 ;
                              DUP 12 ;
                              CDAR ;
                              MUL ;
                              EDIV ;
                              IF_NONE
                                { UNIT ; FAILWITH }
                                { PUSH nat 255 ;
                                  DUP @trans 4 ;
                                  DUP @old_g 9 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { UNIT ; FAILWITH } { CAR @g2 ; DUP 2 ; CAR @g1 ; ADD } ;
                                  DIP { DROP } } ;
                              RENAME @g ;
                              PAIR ;
                              PUSH nat 255 ;
                              DUP @alpha 4 ;
                              DUP 12 ;
                              CAR ;
                              MUL ;
                              EDIV ;
                              IF_NONE
                                { UNIT ; FAILWITH }
                                { PUSH nat 255 ;
                                  DUP @trans 4 ;
                                  DUP @old_r 10 ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { UNIT ; FAILWITH } { CAR @r2 ; DUP 2 ; CAR @r1 ; ADD } ;
                                  DIP { DROP } } ;
                              DIP 2 { DROP } ;
                              RENAME @r ;
                              PAIR } } ;
                    RENAME @_new_r_new_g_new_b ;
                    DUP 11 ;
                    CDR @image ;
                    DUP @pixel_amount 16 ;
                    DUP 3 ;
                    { CDR ; CDR @new_b } ;
                    PUSH nat 8 ;
                    DUP 5 ;
                    { CDR ; CAR @new_g } ;
                    LSL ;
                    PUSH nat 16 ;
                    DUP 6 ;
                    CAR @new_r ;
                    LSL ;
                    OR ;
                    OR @color ;
                    PAIR ;
                    DUP @pt 10 ;
                    DIP { SOME } ;
                    DIP 3
                        { DROP ;
                          DROP ;
                          DROP ;
                          DROP ;
                          DROP ;
                          DROP ;
                          DROP ;
                          DROP ;
                          DROP ;
                          DROP ;
                          DROP ;
                          DROP } ;
                    UPDATE } ;
             DIP 2 { DROP ; DROP ; DROP ; DROP ; DROP } ;
             RENAME @image ;
             PAIR ;
             NIL operation ;
             PAIR } ;
           SWAP ;
           CAR ;
           SWAP ;
           UNPAIR ;
           DIP { SWAP ; PAIR } ;
           PAIR } }