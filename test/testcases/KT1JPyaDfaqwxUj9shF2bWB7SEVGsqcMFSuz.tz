parameter (or (unit %bid) (or (unit %cancel_auction) (unit %resolve_auction)));
storage (pair
          (pair (pair (nat %asset_id) (mutez %current_bid)) (bool %ended)
                (bool %first_bid_placed)
                (address %highest_bidder))
          (pair (address %master_auction_contract) (nat %min_increase) (address %owner))
          (int %round_time)
          (timestamp %start_time)
          (bool %started));
code { UNPAIR ;
       IF_LEFT
         { DROP ;
           DUP ;
           GET 8 ;
           IF {} { PUSH string "WrongCondition: self.data.started" ; FAILWITH } ;
           DUP ;
           CAR ;
           CDR ;
           CAR ;
           IF { PUSH string "WrongCondition: ~ self.data.ended" ; FAILWITH } {} ;
           DUP ;
           CDR ;
           CAR ;
           CDR ;
           CDR ;
           SOURCE ;
           COMPARE ;
           EQ ;
           IF { PUSH string "bidder matches NFT owner" ; FAILWITH } {} ;
           DUP ;
           CAR ;
           CDR ;
           CDR ;
           CDR ;
           SOURCE ;
           COMPARE ;
           EQ ;
           IF
             { PUSH string "bidder matches highest bidder of current round" ; FAILWITH }
             {} ;
           DUP ;
           CDR ;
           CAR ;
           CDR ;
           CAR ;
           PUSH mutez 1 ;
           MUL ;
           SWAP ;
           DUP ;
           DUG 2 ;
           CAR ;
           CAR ;
           CDR ;
           ADD ;
           AMOUNT ;
           COMPARE ;
           GE ;
           IF
             {}
             { PUSH string "WrongCondition: sp.amount >= (self.data.current_bid + sp.mutez(self.data.min_increase))" ;
               FAILWITH } ;
           DUP ;
           CDR ;
           CAR ;
           CAR ;
           SENDER ;
           COMPARE ;
           EQ ;
           IF
             {}
             { PUSH string "WrongCondition: sp.sender == self.data.master_auction_contract" ;
               FAILWITH } ;
           DUP ;
           GET 7 ;
           SWAP ;
           DUP ;
           DUG 2 ;
           GET 5 ;
           ADD ;
           NOW ;
           COMPARE ;
           LT ;
           IF {} { PUSH string "auction finished" ; FAILWITH } ;
           DUP ;
           CAR ;
           CDR ;
           CDR ;
           CAR ;
           IF
             { DUP ;
               CAR ;
               CDR ;
               CDR ;
               CDR ;
               CONTRACT unit ;
               IF_NONE { PUSH int 1112 ; FAILWITH } {} ;
               NIL operation ;
               SWAP ;
               DUP 3 ;
               CAR ;
               CAR ;
               CDR ;
               UNIT ;
               TRANSFER_TOKENS ;
               CONS }
             { UNPAIR ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               CDR ;
               PUSH bool True ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               PAIR ;
               NIL operation } ;
           SWAP ;
           UNPAIR ;
           UNPAIR ;
           CAR ;
           AMOUNT ;
           SWAP ;
           PAIR ;
           PAIR ;
           PAIR ;
           UNPAIR ;
           UNPAIR ;
           SWAP ;
           UNPAIR ;
           SWAP ;
           CAR ;
           SOURCE ;
           SWAP ;
           PAIR ;
           SWAP ;
           PAIR ;
           SWAP ;
           PAIR ;
           PAIR ;
           SWAP }
         { IF_LEFT
             { DROP ;
               DUP ;
               GET 8 ;
               IF {} { PUSH string "WrongCondition: self.data.started" ; FAILWITH } ;
               DUP ;
               CAR ;
               CDR ;
               CAR ;
               IF { PUSH string "WrongCondition: ~ self.data.ended" ; FAILWITH } {} ;
               DUP ;
               CDR ;
               CAR ;
               CAR ;
               SENDER ;
               COMPARE ;
               EQ ;
               IF
                 {}
                 { PUSH string "WrongCondition: sp.sender == self.data.master_auction_contract" ;
                   FAILWITH } ;
               DUP ;
               CDR ;
               CAR ;
               CDR ;
               CDR ;
               SOURCE ;
               COMPARE ;
               EQ ;
               IF {} { PUSH string "only nft owner can cancel auction" ; FAILWITH } ;
               DUP ;
               CAR ;
               CDR ;
               CDR ;
               CAR ;
               IF
                 { DUP ;
                   GET 7 ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   GET 5 ;
                   ADD ;
                   NOW ;
                   COMPARE ;
                   LT ;
                   IF
                     {}
                     { PUSH string "round has finished with bids placed" ; FAILWITH } ;
                   DUP ;
                   CAR ;
                   CDR ;
                   CDR ;
                   CDR ;
                   CONTRACT unit ;
                   IF_NONE { PUSH int 1171 ; FAILWITH } {} ;
                   NIL operation ;
                   SWAP ;
                   DUP 3 ;
                   CAR ;
                   CAR ;
                   CDR ;
                   UNIT ;
                   TRANSFER_TOKENS ;
                   CONS }
                 { NIL operation } ;
               SWAP ;
               UNPAIR ;
               UNPAIR ;
               CAR ;
               PUSH mutez 0 ;
               SWAP ;
               PAIR ;
               PAIR ;
               PAIR ;
               UNPAIR ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               SWAP ;
               CAR ;
               SENDER ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               PAIR ;
               UNPAIR ;
               UNPAIR ;
               SWAP ;
               CDR ;
               PUSH bool True ;
               PAIR ;
               SWAP ;
               PAIR ;
               PAIR ;
               SWAP }
             { DROP ;
               DUP ;
               GET 8 ;
               IF {} { PUSH string "WrongCondition: self.data.started" ; FAILWITH } ;
               DUP ;
               CAR ;
               CDR ;
               CDR ;
               CAR ;
               IF
                 {}
                 { PUSH string "WrongCondition: self.data.first_bid_placed" ; FAILWITH } ;
               DUP ;
               CAR ;
               CDR ;
               CAR ;
               IF { PUSH string "WrongCondition: ~ self.data.ended" ; FAILWITH } {} ;
               DUP ;
               CDR ;
               CAR ;
               CAR ;
               SENDER ;
               COMPARE ;
               EQ ;
               IF
                 {}
                 { PUSH string "WrongCondition: sp.sender == self.data.master_auction_contract" ;
                   FAILWITH } ;
               DUP ;
               CAR ;
               CDR ;
               CDR ;
               CDR ;
               SOURCE ;
               COMPARE ;
               EQ ;
               IF
                 { PUSH bool True }
                 { DUP ; CDR ; CAR ; CDR ; CDR ; SOURCE ; COMPARE ; EQ } ;
               IF
                 {}
                 { PUSH string "only nft owner or highest_bidder can resolve auction" ;
                   FAILWITH } ;
               DUP ;
               CAR ;
               CDR ;
               CDR ;
               CDR ;
               SOURCE ;
               COMPARE ;
               EQ ;
               IF
                 { DUP ;
                   GET 7 ;
                   SWAP ;
                   DUP ;
                   DUG 2 ;
                   GET 5 ;
                   ADD ;
                   NOW ;
                   COMPARE ;
                   GT ;
                   IF
                     {}
                     { PUSH string "highest bidder can only resolve after round finishes" ;
                       FAILWITH } }
                 {} ;
               DUP ;
               UNPAIR ;
               SWAP ;
               UNPAIR ;
               UNPAIR ;
               SWAP ;
               CAR ;
               DIG 4 ;
               CAR ;
               CDR ;
               CDR ;
               CDR ;
               SWAP ;
               PAIR ;
               SWAP ;
               PAIR ;
               PAIR ;
               SWAP ;
               PAIR ;
               DUP ;
               CDR ;
               CAR ;
               CAR ;
               CONTRACT %end_auction (pair (address %highest_bidder) (nat %token_id)) ;
               IF_NONE { PUSH int 1147 ; FAILWITH } {} ;
               NIL operation ;
               SWAP ;
               DIG 2 ;
               DUP ;
               CAR ;
               CAR ;
               CDR ;
               SWAP ;
               DUP ;
               CAR ;
               CAR ;
               CAR ;
               SWAP ;
               DUP ;
               DUG 5 ;
               CAR ;
               CDR ;
               CDR ;
               CDR ;
               PAIR %highest_bidder %token_id ;
               TRANSFER_TOKENS ;
               CONS ;
               SWAP ;
               UNPAIR ;
               UNPAIR ;
               SWAP ;
               CDR ;
               PUSH bool True ;
               PAIR ;
               SWAP ;
               PAIR ;
               PAIR ;
               SWAP } } ;
       PAIR }